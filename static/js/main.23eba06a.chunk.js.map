{"version":3,"sources":["components/movecircle/styled.tsx","components/movecircle/Movecircle.tsx","pages/mainpage/styled.tsx","pages/mainpage/index.tsx","index.tsx"],"names":["PositionRelativeDivWrapper","Styled","div","_templateObject","InnerCanvas","canvas","_templateObject2","OutterCanvas","_templateObject3","MoveCircle","_ref","_ref$outterCanvasColo","outterCanvasColor","width","height","passedSeconds","isPaused","_PassedSeconds","useRef","innerCanvasRef","canvasRef","clockLoopRunFuncRef","requestDrawMoveGraduallyCircleFrame","useCallback","ctx","ctxWidth","ctxHeight","eTime","clearRect","translate","rotate","Math","PI","lineWidth","beginPath","arc","current","strokeStyle","stroke","fillStyle","lineTo","closePath","fill","setTransform","requestAnimationFrame","drawPlayOrStopButton","innerCtx","playCircleRadius","drawInnerCircle","circleOffSet","useLayoutEffect","canvas1Width","offsetWidth","canvas1Height","offsetHeight","getContext","Date","now","innerCanvasWidth","innerCanvasHeight","react_default","a","createElement","ref","data-testid","FlexWrapper","main","styled_templateObject","LeftWrapper","section","styled_templateObject2","RightWrapper","styled_templateObject3","CanvasWrapDiv","mainpage_templateObject","MainPage","_useState","useState","_useState2","Object","slicedToArray","setIsPaused","_useState3","_useState4","setPassedSeconds","handleIsPause","e","useEffect","intervalID","setInterval","clearInterval","onClick","Movecircle","GlobalStyle","createGlobalStyle","src_templateObject","rootElement","document","getElementById","render","Fragment","mainpage"],"mappings":"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","file":"static/js/main.23eba06a.chunk.js","sourcesContent":["import Styled from 'styled-components'\n\nconst PositionRelativeDivWrapper = Styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n`\n\nconst InnerCanvas = Styled.canvas`\n  position: absolute;\n  z-index:300;\n`\n\nconst OutterCanvas = Styled.canvas`\n  position: absolute;\n  z-index:1;\n`\n\nexport { PositionRelativeDivWrapper, InnerCanvas, OutterCanvas }\n","import React, { useRef, useLayoutEffect, useCallback } from 'react'\nimport { PositionRelativeDivWrapper, OutterCanvas, InnerCanvas } from './styled'\n\ninterface Props {\n  width: string\n  height: string\n  innerCanvasColor?: string\n  outterCanvasColor?: string\n  passedSeconds: number\n  isPaused: boolean\n}\n\nexport const canvasDataTestId = 'PomodoroClock'\n\nconst lineWidth = 4  // px\n\nconst MoveCircle = ({\n  outterCanvasColor = '#000000',\n  width,\n  height,\n  passedSeconds,\n  isPaused,\n}: Props) => {\n  const circleOffSet = 20\n  const _PassedSeconds = useRef<number>(0)\n  const innerCanvasRef = useRef<HTMLCanvasElement | null>(null)\n  const canvasRef = useRef<HTMLCanvasElement | null>(null)\n  const tomatoClockMinutes = 25\n  const wholeTomatoClockMinutesProgress = 60 * tomatoClockMinutes\n  const clockLoopRunFuncRef = useRef<FrameRequestCallback | null>(null)\n  const requestDrawMoveGraduallyCircleFrame = useCallback(\n    (ctx: CanvasRenderingContext2D, ctxWidth: number, ctxHeight: number) => (\n      eTime: DOMHighResTimeStamp,\n    ) => {\n      ctx.clearRect(0, 0, ctxWidth, ctxHeight)\n      ctx.translate(ctxWidth / 2, ctxHeight / 2)\n      ctx.rotate(-Math.PI / 2)\n      ctx.lineWidth = lineWidth\n      // 畫會慢慢長大的弧形\n      ctx.beginPath()\n      ctx.arc(\n        0,\n        0,\n        (ctxWidth + ctxHeight) / 4,\n        0 * Math.PI,\n        (_PassedSeconds.current / wholeTomatoClockMinutesProgress) *\n          2 *\n          Math.PI,\n      )\n      ctx.strokeStyle = outterCanvasColor\n      ctx.stroke()\n      ctx.fillStyle = outterCanvasColor\n      ctx.lineTo(0, 0)\n      ctx.closePath()\n      ctx.fill()\n\n      // 畫外圍一圈只有框的圓\n      ctx.beginPath()\n      ctx.arc(0, 0, (ctxWidth + ctxHeight) / 4, 0, 2 * Math.PI)\n      ctx.strokeStyle = outterCanvasColor\n      ctx.stroke()\n      ctx.closePath()\n\n      ctx.setTransform(1, 0, 0, 1, 0, 0)\n      clockLoopRunFuncRef.current &&\n        requestAnimationFrame(clockLoopRunFuncRef.current)\n    },\n    [wholeTomatoClockMinutesProgress, clockLoopRunFuncRef, outterCanvasColor],\n  )\n\n  const drawPlayOrStopButton = useCallback((innerCtx: CanvasRenderingContext2D,\n      ctxWidth: number,\n      ctxHeight: number,\n      isPaused) => {\n\n      const playCircleRadius = (ctxWidth + ctxHeight) / 20\n      innerCtx.translate(ctxWidth / 2, ctxHeight / 2)\n      innerCtx.lineWidth = lineWidth\n      innerCtx.beginPath()\n      innerCtx.arc(0, 0, playCircleRadius, 0 , 2 * Math.PI) \n      innerCtx.strokeStyle = isPaused ? '#FFFFFF' : '#FF4384'\n      innerCtx.stroke()\n      innerCtx.fillStyle = isPaused ? '#FFFFFF' : '#FF4384'\n      innerCtx.fill()\n      innerCtx.closePath()\n\n      // isPaused => 畫一個三角形播放鍵, !isPaused => 畫兩條直線代表暫停\n\n      innerCtx.setTransform(1, 0, 0, 1, 0, 0)\n\n  }, [isPaused])\n\n  const drawInnerCircle = useCallback(\n    (\n      innerCtx: CanvasRenderingContext2D,\n      ctxWidth: number,\n      ctxHeight: number,\n      isPaused,\n    ) => {\n      innerCtx.translate(ctxWidth / 2, ctxHeight / 2)\n      innerCtx.lineWidth = lineWidth\n      innerCtx.beginPath()\n      innerCtx.arc(0, 0, (ctxWidth + ctxHeight) / 4 - (circleOffSet * 1.5), 0, 2 * Math.PI)\n      innerCtx.strokeStyle = isPaused ? '#FFFFFF' : '#FF4384'\n      innerCtx.stroke()\n      innerCtx.fillStyle = isPaused ? '#FF4384' : '#FFFFFF'\n      innerCtx.fill()\n      innerCtx.closePath()\n      innerCtx.setTransform(1, 0, 0, 1, 0, 0)\n\n      drawPlayOrStopButton(innerCtx,\n        ctxWidth,\n        ctxHeight,\n        isPaused,)\n    },\n    [],\n  )\n\n  useLayoutEffect(() => {\n    if (canvasRef.current) {\n      const canvas1Width = canvasRef.current.offsetWidth\n      const canvas1Height = canvasRef.current.offsetHeight\n\n      canvasRef.current.width = canvas1Width\n      canvasRef.current.height = canvas1Height\n      const ctx = canvasRef.current.getContext('2d')\n      const ctxWidth = canvasRef.current.width\n      const ctxHeight = canvasRef.current.height\n      clockLoopRunFuncRef.current = requestDrawMoveGraduallyCircleFrame(\n        ctx as CanvasRenderingContext2D,\n        ctxWidth,\n        ctxHeight,\n      )\n      clockLoopRunFuncRef.current(Date.now())\n    }\n  }, [canvasRef, requestDrawMoveGraduallyCircleFrame])\n\n  // 畫中間的圓 只在denpendencies change時 才畫  不會使用requestAnimationFrame 一直畫\n  useLayoutEffect(() => {\n    if (innerCanvasRef.current) {\n      const innerCtx = innerCanvasRef.current.getContext('2d')\n      const innerCanvasWidth = innerCanvasRef.current.offsetWidth\n      const innerCanvasHeight = innerCanvasRef.current.offsetHeight\n      innerCanvasRef.current.width = innerCanvasWidth\n      innerCanvasRef.current.height = innerCanvasHeight\n\n      drawInnerCircle(\n        innerCtx as CanvasRenderingContext2D,\n        innerCanvasWidth,\n        innerCanvasHeight,\n        isPaused,\n      )\n    }\n  }, [innerCanvasRef, drawInnerCircle, isPaused])\n\n  _PassedSeconds.current = passedSeconds\n\n  return (\n    <PositionRelativeDivWrapper>\n      <OutterCanvas ref={canvasRef} width={width} height={height} data-testid={canvasDataTestId}/>\n      <InnerCanvas ref={innerCanvasRef} width={width} height={height} data-testid={canvasDataTestId}/>\n    </PositionRelativeDivWrapper>\n  )\n}\n\nexport default MoveCircle\n","import React from 'react'\nimport Styled from 'styled-components'\n\nexport const FlexWrapper = Styled.main`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n`\n\nexport const LeftWrapper = Styled.section`\n  width: 70%;\n  height: 100%;\n  background-color: #FFEDF7;\n`\n\nexport const RightWrapper = Styled.div`\n  width: 30%;\n  height: 100%;\n  background-color: #003164;\n  position: relative;\n`\n","import React, { useState, useCallback, useEffect } from 'react'\nimport MoveCircle from '../../components/movecircle'\nimport Styled from 'styled-components'\nimport { FlexWrapper, LeftWrapper, RightWrapper } from './styled'\n\nconst CanvasWrapDiv = Styled.div`\n  position: absolute;\n  width: 550px;\n  height:550px;\n  z-index: 3000;\n  margin-left: -275px;\n  margin-top: calc(50vh - 540px / 2);\n`\n\nconst countDownMinutes = 25\n\nfunction MainPage() {\n  const [isPaused, setIsPaused] = useState(true)\n  const [passedSeconds, setPassedSeconds] = useState(0)\n\n  const handleIsPause = useCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    setIsPaused((isPaused: boolean) => !isPaused)\n  }, [])\n\n  useEffect(() => {\n    const doSetPassedSeconds = () => {\n      if (!isPaused) {\n        setPassedSeconds((passedSeconds: number) => passedSeconds + 1)\n      }\n    }\n\n    const intervalID = setInterval(doSetPassedSeconds, 1000)\n\n    return () => {\n      clearInterval(intervalID)\n    }\n  }, [isPaused])\n\n  return (\n    <FlexWrapper>\n      <LeftWrapper>\n        <div> 過了{passedSeconds}秒</div>\n      </LeftWrapper>\n      <RightWrapper>\n        <CanvasWrapDiv onClick={handleIsPause}>\n          <MoveCircle\n            width={'540px'}\n            height={'540px'}\n            outterCanvasColor={isPaused ? '#FF4384' : '#FF4384'}\n            isPaused={isPaused}\n            passedSeconds={passedSeconds}\n          />\n        </CanvasWrapDiv>\n      </RightWrapper>\n    </FlexWrapper>\n  )\n}\n\nexport default MainPage\n","import React from 'react'\nimport MainPage from './pages/mainpage'\nimport { render } from 'react-dom'\n\nimport { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n\n  html, body {\n    width: 100vw;\n    height: 100vh;\n  }\n\n  * {\n    margin: 0px;\n    padding: 0px;\n    box-sizing: border-box;\n  }\n`\n\nconst rootElement = document.getElementById('root')\nrender(\n  <>\n    <GlobalStyle />\n    <MainPage />\n  </>,\n  rootElement,\n)\n"],"sourceRoot":""}