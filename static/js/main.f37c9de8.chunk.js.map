{"version":3,"sources":["store/reducers/app_configs/types.ts","store/actionTypes/sagas/appconditions.ts","store/actionCreator/sagas/appconditions/index.ts","pages/mainpage/styled.tsx","components/movecircle/styled.tsx","components/movecircle/Movecircle.tsx","components/countdownTimeText/styled.tsx","components/countdownTimeText/index.tsx","components/inputField/styled.tsx","store/actionTypes/sagas/todo.ts","components/inputField/index.tsx","store/entities/todo.ts","store/actionCreator/sagas/todos/index.ts","pages/mainpage/container/InputForm.tsx","components/listItem/styled.tsx","components/listItem/index.tsx","components/listArea/index.tsx","pages/mainpage/mainpage.tsx","pages/mainpage/index.tsx","store/actionTypes/reducers/todos.ts","themes/theme.ts","store/reducers/todos/index.ts","store/actionTypes/reducers/appconditions.ts","store/reducers/app_configs/index.ts","store/reducers/index.ts","store/actionCreator/reducers/todos/index.ts","store/saga/todos/index.ts","store/actionCreator/reducers/appconditions/index.ts","store/saga/appconditions/index.ts","store/saga/index.ts","store/index.ts","themes/globalStyle.ts","index.tsx"],"names":["AppCondition","AppConditionSagaActionTypes","toggleAppCondition","createAction","TOGGLE_APP_CONDITION_SAGA","FlexWrapper","Styled","main","_templateObject","props","theme","mobileOneColumn","LeftWrapper","section","_templateObject2","leftWrapperBgColor","RightWrapper","div","_templateObject3","InputFormLocatedWrapper","_templateObject4","CountdownTimeTextWrapper","_templateObject5","ListAreaWrapper","_templateObject6","PositionRelativeDivWrapper","styled_templateObject","InnerCanvas","canvas","styled_templateObject2","OutterCanvas","styled_templateObject3","MoveCircle","_ref","_ref$outterCanvasColo","outterCanvasColor","width","height","passedSeconds","isPaused","tomatoClockMinutes","_PassedSeconds","useRef","innerCanvasRef","canvasRef","wholeTomatoClockMinutesProgress","clockLoopRunFuncRef","requestDrawMoveGraduallyCircleFrame","useCallback","ctx","ctxWidth","ctxHeight","eTime","clearRect","translate","rotate","Math","PI","lineWidth","beginPath","arc","current","strokeStyle","stroke","fillStyle","lineTo","closePath","fill","setTransform","requestAnimationFrame","drawPlayOrStopButton","innerCtx","playCircleRadius","triangleBaseLength","stopSignBaseLength","drawInnerCircle","circleOffSet","useLayoutEffect","canvas1Width","offsetWidth","canvas1Height","offsetHeight","getContext","Date","now","innerCanvasWidth","innerCanvasHeight","react_default","a","createElement","ref","data-testid","TimeTetxWrapper","countdownTimeText_styled_templateObject","TimeText","countdownTimeText_styled_templateObject2","countDownTextColor","TimeTextStyledComp","children","formatToClockTimeString","min","sec","wholeMinutes","wholeSeconds","useMemo","_getMinAndSec","passSeconds","remainSeconds","floor","getMinAndSec","_getMinAndSec2","Object","slicedToArray","styled_TimeTextStyledComp","TodoSagaActionTypes","InputFieldOuttestWrapper","inputField_styled_templateObject","InputFieldWrapper","inputField_styled_templateObject2","InputField","input","inputField_styled_templateObject3","inputTextColor","ConfirmButtonWrapper","styled_templateObject4","ConfirmButton","styled_templateObject5","InputFieldComponent","ConfirmButtonComponent","onClick","InputFieldWithConfirmButton","styled_InputFieldComponent","styled_ConfirmButtonComponent","TodoImpl","desc","remainSec","nowTask","classCallCheck","this","createTimestamp","isComplete","tomatoCount","nowTomatoCount","addNewTodo","Add_TODO","payload","examineIsDescContentOK","Update_TODO","InputForm","_useState","useState","_useState2","text","setText","dispatcher","useDispatch","todoList","useSelector","state","todo","todos","newTodoMinute","appConfig","taskOneTomatowaitMinutes","onInputContentChange","evt","nowText","currentTarget","value","prevText","handleOnFormSubmit","preventDefault","length","TodoVO","onSubmit","inputField_InputFieldWithConfirmButton","placeholder","onChange","ListItemWrapper","article","listItem_styled_templateObject","ListItemIsDoneChecker","listItem_styled_templateObject2","ListContentArea","listItem_styled_templateObject3","ListItemPlayBtn","listItem_styled_templateObject4","ListItemComponent","className","ListArea","map","listItem_ListItemComponent","key","CanvasWrapDiv","mainpage_templateObject","MainPage","console","log","countDownMinutes","appConditionNow","appTheme","changeTheme","toggleAppStatus","setIsPaused","_useState3","_useState4","setPassedSeconds","handleIsPause","e","useEffect","intervalID","setInterval","ACTIVE","prevState","clearInterval","countdownTimeText_TimeText","Movecircle","canvasThemeColor","MainPageWrapper","appState","appNowStatus","betweenTomatoTaskBreakMinutes","mainpage","TodoReducerActionTypes","ActiveThemes","BreakTheme","baseStyled","AppConditionReducersActionTypes","rootReducer","combineReducers","arguments","undefined","action","type","TOGGLE_APP_CONDITION","objectSpread","BREAK","nowTaskTodo","concat","toConsumableArray","addNewTodoFlow","todosRootSaga","regenerator_default","wrap","_context","prev","next","take","sent","put","stop","_marked","_context2","all","_marked2","toggleAppConditionFlow","appconditionsRootSaga","appconditions_marked","appconditions_marked2","appStore","saga","appCondiionsSaga","sagaMiddleware","createSagaMiddleware","createStoreWithMiddleware","applyMiddleware","createStore","RootReducer","logicRootSagaArray","forEach","kindOfSomeFlowSaga","run","GlobalStyle","createGlobalStyle","globalStyle_templateObject","rootElement","document","getElementById","render","activeOrBreak","setActiveOrBreak","Fragment","es","store","styled_components_browser_esm","themeName","prevThemeName"],"mappings":"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","file":"static/js/main.f37c9de8.chunk.js","sourcesContent":["export type AppConfigStateType = {\n  taskOneTomatowaitMinutes: number,\n  betweenTomatoTaskBreakMinutes: number,\n  appNowStatus: AppCondition,\n}\n\nexport enum AppCondition {\n    ACTIVE = 'ACTIVE',\n    BREAK = 'BREAK',\n}","export enum AppConditionSagaActionTypes {\n  TOGGLE_APP_CONDITION_SAGA = 'TOGGLE_APP_CONDITION_SAGA',\n}","import {createAction} from 'redux-actions'\nimport { AppConditionSagaActionTypes } from '../../../actionTypes/sagas/appconditions'\n\nconst toggleAppCondition = createAction(AppConditionSagaActionTypes.TOGGLE_APP_CONDITION_SAGA, () => {})\n\nexport {toggleAppCondition}","import React from 'react'\nimport Styled from 'styled-components'\n\nexport const FlexWrapper = Styled.main`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  @media (max-width:${props => props.theme.mobileOneColumn}){\n    flex-direction: column;\n  }\n`\n\nexport const LeftWrapper = Styled.section`\n  width: 70%;\n  height: 100%;\n  background-color: ${props => props.theme.leftWrapperBgColor};\n  position: relative;\n  @media (max-width:${props => props.theme.mobileOneColumn}){\n    width: 100%;\n  }\n  \n`\n\nexport const RightWrapper = Styled.div`\n  width: 30%;\n  height: 100%;\n  background-color: #003164;\n\n  @media (max-width:${props => props.theme.mobileOneColumn}){\n    width: 100%;\n  }\n`\n\nexport const InputFormLocatedWrapper = Styled.div`\n  margin-left: 85px;\n  margin-top: 48px;\n`\nexport const CountdownTimeTextWrapper = Styled.div`\n  margin-top: 164px;\n  margin-left: 80px;\n  width: 454px;\n  height: 206px;\n`\n\nexport const ListAreaWrapper = Styled.div`\n  margin-top: 110px;\n  margin-left: 80px;\n  width: 454px;\n  height: 115px;\n  overflow-y: auto;\n  overflow-x: hidden;\n`","import Styled from 'styled-components'\n\nconst PositionRelativeDivWrapper = Styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n`\n\nconst InnerCanvas = Styled.canvas`\n  position: absolute;\n  z-index:300;\n`\n\nconst OutterCanvas = Styled.canvas`\n  position: absolute;\n  z-index:1;\n`\n\nexport { PositionRelativeDivWrapper, InnerCanvas, OutterCanvas }\n","import React, { useRef, useLayoutEffect, useCallback } from 'react'\nimport { PositionRelativeDivWrapper, OutterCanvas, InnerCanvas } from './styled'\n\ninterface Props {\n  width: string\n  height: string\n  innerCanvasColor?: string\n  outterCanvasColor?: string\n  passedSeconds: number\n  isPaused: boolean\n  tomatoClockMinutes: number\n}\n\nexport const canvasDataTestId = 'PomodoroClock'\n\nconst lineWidth = 4 // px\n\nconst MoveCircle = ({\n  outterCanvasColor = '#000000',\n  width,\n  height,\n  passedSeconds,\n  isPaused,\n  tomatoClockMinutes,\n}: Props) => {\n  const circleOffSet = 20\n  const _PassedSeconds = useRef<number>(0)\n  const innerCanvasRef = useRef<HTMLCanvasElement | null>(null)\n  const canvasRef = useRef<HTMLCanvasElement | null>(null)\n  const wholeTomatoClockMinutesProgress = 60 * tomatoClockMinutes\n  const clockLoopRunFuncRef = useRef<FrameRequestCallback | null>(null)\n  const requestDrawMoveGraduallyCircleFrame = useCallback(\n    (ctx: CanvasRenderingContext2D, ctxWidth: number, ctxHeight: number) => (\n      eTime: DOMHighResTimeStamp,\n    ) => {\n      const offsetToPreventPixelOverflowCanvas = 2\n      ctx.clearRect(0, 0, ctxWidth, ctxHeight)\n      ctx.translate(ctxWidth / 2, ctxHeight / 2)\n      ctx.rotate(-Math.PI / 2)\n      ctx.lineWidth = lineWidth\n      // 畫會慢慢長大的弧形\n      ctx.beginPath()\n      ctx.arc(\n        0,\n        0,\n        (ctxWidth + ctxHeight) / 4 - offsetToPreventPixelOverflowCanvas,\n        0 * Math.PI,\n        (_PassedSeconds.current / wholeTomatoClockMinutesProgress) *\n          2 *\n          Math.PI,\n      )\n      ctx.strokeStyle = outterCanvasColor\n      ctx.stroke()\n      ctx.fillStyle = outterCanvasColor\n      ctx.lineTo(0, 0)\n      ctx.closePath()\n      ctx.fill()\n\n      // 畫外圍一圈只有框的圓\n      ctx.beginPath()\n      ctx.arc(0, 0, ((ctxWidth + ctxHeight) / 4) - offsetToPreventPixelOverflowCanvas, 0, 2 * Math.PI)\n      ctx.strokeStyle = outterCanvasColor\n      ctx.stroke()\n      ctx.closePath()\n\n      ctx.setTransform(1, 0, 0, 1, 0, 0)\n      clockLoopRunFuncRef.current &&\n        requestAnimationFrame(clockLoopRunFuncRef.current)\n    },\n    [wholeTomatoClockMinutesProgress, clockLoopRunFuncRef, outterCanvasColor],\n  )\n\n  const drawPlayOrStopButton = useCallback(\n    (\n      innerCtx: CanvasRenderingContext2D,\n      ctxWidth: number,\n      ctxHeight: number,\n      isPaused,\n    ) => {\n      const playCircleRadius = (ctxWidth + ctxHeight) / 20\n      innerCtx.translate(ctxWidth / 2, ctxHeight / 2)\n      innerCtx.lineWidth = lineWidth\n      innerCtx.beginPath()\n      innerCtx.arc(0, 0, playCircleRadius, 0, 2 * Math.PI)\n      innerCtx.strokeStyle = isPaused ? '#FFFFFF' : outterCanvasColor\n      innerCtx.stroke()\n      innerCtx.fillStyle = isPaused ? '#FFFFFF' : outterCanvasColor\n      innerCtx.fill()\n      innerCtx.closePath()\n\n      // isPaused => 畫一個三角形播放鍵, !isPaused => 畫兩條直線代表暫停\n      if (isPaused) {\n        const triangleBaseLength = playCircleRadius / 3\n\n        innerCtx.translate(5, 0)\n\n        innerCtx.beginPath()\n        innerCtx.lineTo(triangleBaseLength, 0)\n        innerCtx.lineTo(-triangleBaseLength * 1, -triangleBaseLength)\n        innerCtx.lineTo(-triangleBaseLength * 1, triangleBaseLength)\n        innerCtx.lineTo(triangleBaseLength, 0)\n        innerCtx.closePath()\n        innerCtx.strokeStyle = isPaused ? outterCanvasColor : '#FFFFFF'\n        innerCtx.stroke()\n        innerCtx.fillStyle = isPaused ? outterCanvasColor : '#FFFFFF'\n        innerCtx.fill()\n      }else{\n        const stopSignBaseLength = playCircleRadius / 3\n        innerCtx.translate(5, 0)\n        innerCtx.beginPath()\n        innerCtx.lineTo(stopSignBaseLength, 0)\n        innerCtx.lineTo(stopSignBaseLength, -stopSignBaseLength)\n        innerCtx.lineTo(0, -stopSignBaseLength)\n        innerCtx.lineTo(0, stopSignBaseLength)\n        innerCtx.lineTo(stopSignBaseLength, stopSignBaseLength)\n        innerCtx.closePath()\n        innerCtx.strokeStyle = isPaused ? outterCanvasColor : '#FFFFFF'\n        innerCtx.stroke()\n        innerCtx.fillStyle = isPaused ? outterCanvasColor : '#FFFFFF'\n        innerCtx.fill()\n\n        innerCtx.translate(-10, 0)\n        innerCtx.beginPath()\n        innerCtx.lineTo(-stopSignBaseLength, 0)\n        innerCtx.lineTo(-stopSignBaseLength, -stopSignBaseLength)\n        innerCtx.lineTo(0, -stopSignBaseLength)\n        innerCtx.lineTo(0, 0)\n        innerCtx.lineTo(0, stopSignBaseLength)\n        innerCtx.lineTo(-stopSignBaseLength, stopSignBaseLength)\n        innerCtx.lineTo(-stopSignBaseLength, 0)\n        innerCtx.lineTo(0, 0)\n        innerCtx.closePath()\n\n        innerCtx.strokeStyle = isPaused ? outterCanvasColor : '#FFFFFF'\n        innerCtx.stroke()\n        innerCtx.fillStyle = isPaused ? outterCanvasColor : '#FFFFFF'\n        innerCtx.fill()\n\n      }\n\n      innerCtx.setTransform(1, 0, 0, 1, 0, 0)\n    },\n    [isPaused, outterCanvasColor],\n  )\n\n  const drawInnerCircle = useCallback(\n    (\n      innerCtx: CanvasRenderingContext2D,\n      ctxWidth: number,\n      ctxHeight: number,\n      isPaused,\n    ) => {\n      innerCtx.translate(ctxWidth / 2, ctxHeight / 2)\n      innerCtx.lineWidth = lineWidth\n      innerCtx.beginPath()\n      innerCtx.arc(\n        0,\n        0,\n        (ctxWidth + ctxHeight) / 4 - circleOffSet * 1.5,\n        0,\n        2 * Math.PI,\n      )\n      innerCtx.strokeStyle = isPaused ? '#FFFFFF' : outterCanvasColor\n      innerCtx.stroke()\n      innerCtx.fillStyle = isPaused ? outterCanvasColor : '#FFFFFF'\n      innerCtx.fill()\n      innerCtx.closePath()\n      innerCtx.setTransform(1, 0, 0, 1, 0, 0)\n\n      drawPlayOrStopButton(innerCtx, ctxWidth, ctxHeight, isPaused)\n    },\n    [outterCanvasColor],\n  )\n\n  useLayoutEffect(() => {\n    if (canvasRef.current) {\n      const canvas1Width = canvasRef.current.offsetWidth\n      const canvas1Height = canvasRef.current.offsetHeight\n\n      canvasRef.current.width = canvas1Width\n      canvasRef.current.height = canvas1Height\n      const ctx = canvasRef.current.getContext('2d')\n      const ctxWidth = canvasRef.current.width\n      const ctxHeight = canvasRef.current.height\n      clockLoopRunFuncRef.current = requestDrawMoveGraduallyCircleFrame(\n        ctx as CanvasRenderingContext2D,\n        ctxWidth,\n        ctxHeight,\n      )\n      clockLoopRunFuncRef.current(Date.now())\n    }\n  }, [canvasRef, requestDrawMoveGraduallyCircleFrame])\n\n  // 畫中間的圓 只在denpendencies change時 才畫  不會使用requestAnimationFrame 一直畫\n  useLayoutEffect(() => {\n    if (innerCanvasRef.current) {\n      const innerCtx = innerCanvasRef.current.getContext('2d')\n      const innerCanvasWidth = innerCanvasRef.current.offsetWidth\n      const innerCanvasHeight = innerCanvasRef.current.offsetHeight\n      innerCanvasRef.current.width = innerCanvasWidth\n      innerCanvasRef.current.height = innerCanvasHeight\n\n      drawInnerCircle(\n        innerCtx as CanvasRenderingContext2D,\n        innerCanvasWidth,\n        innerCanvasHeight,\n        isPaused,\n      )\n    }\n  }, [innerCanvasRef, drawInnerCircle, isPaused])\n\n  _PassedSeconds.current = passedSeconds\n\n  return (\n    <PositionRelativeDivWrapper>\n      <OutterCanvas\n        ref={canvasRef}\n        width={width}\n        height={height}\n        data-testid={canvasDataTestId}\n      />\n      <InnerCanvas\n        ref={innerCanvasRef}\n        width={width}\n        height={height}\n        data-testid={canvasDataTestId}\n      />\n    </PositionRelativeDivWrapper>\n  )\n}\n\nexport default MoveCircle\n","import React from 'react'\nimport Styled from 'styled-components'\n\nconst TEXT_LINE_HEIGHT = '176px'\n\nconst TimeTetxWrapper = Styled.div`\n  height: ${TEXT_LINE_HEIGHT};\n  width: 100%;\n  text-align: center;\n`\n\nconst TimeText = Styled.div`\n  color: ${ props => props.theme.countDownTextColor};\n  font-size: 176px;\n  line-height: ${TEXT_LINE_HEIGHT};\n  font-family: 'Roboto', sans-serif;\n   @media (max-width:${props => props.theme.mobileOneColumn}){\n    font-size: 100px;\n  }\n`\n\ninterface Props {\n  children: string | Function\n}\n\nexport const TimeTextStyledComp = ({children}: Props) => (\n  <TimeTetxWrapper>\n    <TimeText>{children}</TimeText>\n  </TimeTetxWrapper>\n)\n","import React, {useMemo, useCallback} from 'react'\nimport { TimeTextStyledComp } from './styled'\n\ninterface Props {\n  wholeMinutes: number\n  passedSeconds: number\n\n}\n\nexport const formatToClockTimeString = (min: number, sec: number) => {\n  return (min < 10 ? '0'+min : min)+ ':' + (sec >= 10 ? ''+sec : '0'+sec)\n}\n\nexport default function TimeText({wholeMinutes, passedSeconds}: Props) {\n\n  const {wholeSeconds} = useMemo(() => (\n    {wholeSeconds: wholeMinutes * 60}\n  ),[wholeMinutes])\n\n  const getMinAndSec =  useCallback((wholeSeconds: number, passSeconds: number) => {\n    const remainSeconds = wholeSeconds - passSeconds\n\n    if(remainSeconds < 0) {\n      return [0, 0]\n    }\n\n    return [Math.floor(remainSeconds/60), remainSeconds%60]\n  }, [])\n  const [min, sec] = getMinAndSec(wholeSeconds, passedSeconds)\n  return (\n    <TimeTextStyledComp>\n      {formatToClockTimeString(min, sec)}\n    </TimeTextStyledComp>  \n  )\n}\n","import React from 'react'\nimport Styled, { ThemedStyledInterface } from 'styled-components'\n\nconst OuttestHeight = '56px'\n\nconst InputFieldOuttestWrapper = Styled.div`\n  width: 445px;\n  height: ${OuttestHeight};\n  display: flex;\n  background-color: #FFFFFF;\n    @media (max-width:${props => props.theme.mobileOneColumn}){\n    width: 80%;\n    margin: 10px auto;\n  }\n`\n\nconst InputFieldWrapper = Styled.div`\n  width: 445px\n  height: ${OuttestHeight};\n`\n\nconst InputField = Styled.input`\n  width: 100%;\n  padding: 19px 16px 18px 16px;\n  color: ${props => props.theme.inputTextColor};\n  text-align: left;\n  font-size: 16px;\n  font-family: 'Roboto', Bold Italic;\n  line-height: 19px;\n  border: none; \n  border-width: 0; \n  box-shadow: none;\n  ::placeholder {color: ${props => props.theme.inputTextColor};}\n`\n\nconst confirmButtonLength = '24px'\n\nconst ConfirmButtonWrapper = Styled.div`\n  width: ${confirmButtonLength};\n  height: 24px;\n  margin: calc( (${OuttestHeight} - ${confirmButtonLength}) / 2) 16px;\n  text-align: center;\n  cursor: pointer;\n`\n\nconst ConfirmButton = Styled.a`\n   text-decoration: none;\n   line-height: ${confirmButtonLength};\n   font-size: 24px;\n   font-family: 'Roboto', Bold Italic;\n   color: ${props => props.theme.inputTextColor};\n`\n\nconst InputFieldComponent = (props: any) => (\n  <InputFieldWrapper>\n    <InputField {...props} />\n  </InputFieldWrapper>\n)\n\nconst ConfirmButtonComponent = (props: any) => (\n  <ConfirmButtonWrapper>\n    <ConfirmButton onClick={props.onClick}>\n      {props.children}\n    </ConfirmButton>\n  </ConfirmButtonWrapper>\n)\n\nexport { InputFieldComponent, InputFieldOuttestWrapper, ConfirmButtonComponent }\n","export enum TodoSagaActionTypes {\n  Add_TODO = 'Add_TODO_SAGA',\n  Update_TODO = 'Update_TODO_SAGA',\n} ","import React from 'react'\nimport { InputFieldComponent, InputFieldOuttestWrapper, ConfirmButtonComponent } from './styled'\n\ntype EventHandler = {\n  onChange: (evt: React.ChangeEvent<HTMLInputElement>) => void\n  onClick: (evt: React.MouseEvent<HTMLElement>) => void\n}\n\nconst InputFieldWithConfirmButton: React.FunctionComponent<\n  Partial<HTMLInputElement & EventHandler>\n> = props => {\n  return (\n <InputFieldOuttestWrapper>\n   <InputFieldComponent {...props} />\n   <ConfirmButtonComponent onClick={props.onClick}>{\" \"}+{\" \"}</ConfirmButtonComponent>\n </InputFieldOuttestWrapper>\n\n  )\n}\n\nexport { InputFieldWithConfirmButton }\n","import {Todo} from '../reducers/todos/types'\n\nclass TodoImpl implements Todo {\n\n  desc: string\n  remainSec: number\n  createTimestamp: number\n  isComplete: boolean\n  nowTask: boolean\n  tomatoCount: number\n  nowTomatoCount: number\n\n  constructor(desc: string, remainSec: number, nowTask: boolean) {\n    this.desc = desc\n    this.remainSec = remainSec\n    this.createTimestamp = Math.floor((Date.now() / 1000))\n    this.isComplete = false\n    this.nowTask = nowTask\n    this.tomatoCount = 1\n    this.nowTomatoCount = 1\n  }\n\n  \n}\n\nexport {TodoImpl as TodoVO}","import {createAction} from 'redux-actions'\nimport { TodoSagaActionTypes } from '../../../actionTypes/sagas/todo'\nimport { TodoVO } from '../../../entities/todo'\n\nconst addNewTodo = createAction(TodoSagaActionTypes.Add_TODO, (payload: TodoVO) => payload)\n\nconst updateTodo = createAction(TodoSagaActionTypes.Update_TODO, (payload: TodoVO) => payload)\n\nexport {addNewTodo, updateTodo}","import React, { useState, useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { InputFieldWithConfirmButton } from '../../../components/inputField'\nimport { TodoVO } from '../../../store/entities/todo'\nimport { addNewTodo } from '../../../store/actionCreator/sagas/todos'\nimport { AppState } from '../../../store/reducers'\nimport { Todo } from '../../../store/reducers/todos/types'\n\nconst examineIsDescContentOK = (desc: string) => (desc ? true : false)\n\nexport default function InputForm() {\n  const [text, setText] = useState('')\n  const dispatcher = useDispatch()\n  const todoList = useSelector<AppState, Todo[]>(state => state.todo.todos)\n  const newTodoMinute = useSelector<AppState, number>(state => state.appConfig.taskOneTomatowaitMinutes)\n\n  const oneMinutesSec = 60 // 一分鐘60秒這樣的事情是不可能變了吧!!??\n\n  const onInputContentChange = useCallback(\n    (evt: React.ChangeEvent<HTMLInputElement>) => {\n      const nowText = evt.currentTarget.value\n      setText((prevText: string) => nowText)\n    },\n    [setText],\n  )\n\n  const handleOnFormSubmit = useCallback(\n    (evt: React.FormEvent<HTMLFormElement>) => {\n      evt.preventDefault()\n      if (!examineIsDescContentOK(text)) {\n        return\n      }\n      if(todoList.length === 0){\n        dispatcher(addNewTodo(new TodoVO(text, newTodoMinute * oneMinutesSec, true)))\n      }else{\n        dispatcher(addNewTodo(new TodoVO(text, newTodoMinute * oneMinutesSec, false)))\n      }\n\n      setText(prevText => '')\n    },\n    [text, newTodoMinute, setText],\n  )\n\n  return (\n    <form onSubmit={handleOnFormSubmit}>\n      <InputFieldWithConfirmButton\n        placeholder={'ADD A NEW MISSION…'}\n        value={text}\n        onChange={onInputContentChange}\n      />\n    </form>\n  )\n}\n","import React from 'react'\nimport Styled, { ThemedStyledInterface } from 'styled-components'\n\nconst normalScreenWidth = '445px'\nconst functionalBtnWidth = '45px'\nconst WrapperHeight = '32px'\n\nconst ListItemWrapper = Styled.article`\n  display: flex;\n  width: ${normalScreenWidth};\n  height: ${WrapperHeight};\n  border-bottom: 1px solid #DCD3E3;\n  margin-bottom: 9px;\n\n  @media (max-width:${props => props.theme.mobileOneColumn}){\n    width: 100%;\n  }\n`\n\nconst ListItemIsDoneChecker = Styled.div`\n  width: ${functionalBtnWidth};\n  line-height: ${WrapperHeight};\n  height: ${WrapperHeight};\n  text-align: center;\n\n   @media (max-width:${props => props.theme.mobileOneColumn}){\n    width: 10%;\n  }\n  & > i {\n    line-height: ${WrapperHeight};\n    height: ${WrapperHeight};\n    text-align: center;\n    cursor: pointer;\n  }\n`\n\nconst ListContentArea = Styled.div`\n  line-height: ${WrapperHeight};\n  height: ${WrapperHeight};\n  width: calc(${normalScreenWidth} - ${functionalBtnWidth} * 2);\n  text-align: left;\n\n   @media (max-width:${props => props.theme.mobileOneColumn}){\n    width: 80%;\n  }\n`\n\nconst ListItemPlayBtn = Styled.div`\n  width: ${functionalBtnWidth};\n  line-height: ${WrapperHeight};\n  height: ${WrapperHeight};\n\n   @media (max-width:${props => props.theme.mobileOneColumn}){\n    width: 10%;\n  }\n\n  & > i {\n    line-height: ${WrapperHeight};\n    height: ${WrapperHeight};\n    text-align: center;\n    cursor: pointer;\n  }\n`\n\nexport { ListItemWrapper, ListItemIsDoneChecker, ListContentArea, ListItemPlayBtn  } \n","import React from 'react'\nimport Styled from 'styled-components'\nimport {\n  ListItemWrapper,\n  ListItemIsDoneChecker,\n  ListContentArea,\n  ListItemPlayBtn,\n} from './styled'\n\nconst ListItemComponent = (props: any) => {\n  return (\n    <ListItemWrapper>\n      <ListItemIsDoneChecker>\n        <i className=\"material-icons\">panorama_fish_eye</i>\n      </ListItemIsDoneChecker>\n      <ListContentArea>{props.children}</ListContentArea>\n      <ListItemPlayBtn>\n        <i className=\"material-icons\">play_circle_outline</i>\n      </ListItemPlayBtn>\n    </ListItemWrapper>\n  )\n}\n\nexport { ListItemComponent as ListItem }\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../../store/reducers'\nimport {Todo} from '../../store/reducers/todos/types'\nimport { ListItem } from '../listItem'\n\nexport default function ListArea() {\n\n  const todos = useSelector<AppState, Todo[]>( state => state.todo.todos)\n  return (\n    <div>\n      {todos.map(todo => <ListItem key={todo.createTimestamp}>{todo.desc}</ListItem>)}\n    </div>\n  )\n}\n","import React, { useState, useCallback, useEffect } from 'react'\nimport Styled from 'styled-components'\nimport { useSelector } from 'react-redux'\nimport {\n  FlexWrapper,\n  LeftWrapper,\n  RightWrapper,\n  InputFormLocatedWrapper,\n  CountdownTimeTextWrapper,\n  ListAreaWrapper,\n} from './styled'\nimport MoveCircle from '../../components/movecircle'\nimport CountdownTimeText from '../../components/countdownTimeText'\nimport InputForm from './container/InputForm'\nimport ListArea from '../../components/listArea'\nimport { AppState } from '../../store/reducers'\nimport {AppCondition} from '../../store/reducers/app_configs/types'\nimport { ThemeType } from '../../themes/theme'\n\nconst CanvasWrapDiv = Styled.div`\n  position: absolute;\n  width: 550px;\n  height:550px;\n  z-index: 3000;\n  margin-left: -275px;\n  margin-top: calc(50vh - 540px / 2);\n\n  @media (max-width:${props => props.theme.mobileOneColumn}){\n     margin-left: 0px;\n     margin-top: calc(50vh - 540px);\n  }\n  \n`\n\ninterface Props {\n  changeTheme: (string) => void\n  appTheme: ThemeType\n  countDownMinutes: number\n  toggleAppStatus: () => void\n  appConditionNow: AppCondition\n}\n\nfunction MainPage(props: Props) {\n  console.log('update again?', props.countDownMinutes, props.appConditionNow)\n  const { countDownMinutes, appTheme, changeTheme, toggleAppStatus, appConditionNow } = props\n  const [isPaused, setIsPaused] = useState(true)\n  const [passedSeconds, setPassedSeconds] = useState(0)\n\n  const handleIsPause = useCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    setIsPaused((isPaused: boolean) => !isPaused)\n  }, [])\n\n  useEffect(() => {\n    const doSetPassedSeconds = () => {\n      if (!isPaused) {\n        setPassedSeconds((passedSeconds: number) => passedSeconds + 1)\n      }\n\n      if(countDownMinutes * 60 === passedSeconds){\n        if(appConditionNow === AppCondition.ACTIVE){\n          changeTheme('break')\n        }else{\n          changeTheme('active')\n        } \n        toggleAppStatus()\n        setPassedSeconds(prevState => 0)\n      }\n    }\n\n    const intervalID = setInterval(doSetPassedSeconds, 1000)\n\n    return () => {\n      clearInterval(intervalID)\n    }\n  }, [isPaused, countDownMinutes, passedSeconds, props, changeTheme])\n\n  return (\n    <FlexWrapper>\n      <LeftWrapper>\n        <InputFormLocatedWrapper>\n          <InputForm />\n        </InputFormLocatedWrapper>\n        <CountdownTimeTextWrapper>\n          <CountdownTimeText\n            wholeMinutes={countDownMinutes}\n            passedSeconds={passedSeconds}\n          />\n        </CountdownTimeTextWrapper>\n        <ListAreaWrapper>\n          <ListArea />\n        </ListAreaWrapper>\n      </LeftWrapper>\n      <RightWrapper>\n        <CanvasWrapDiv onClick={handleIsPause}>\n          <MoveCircle\n            width={'540px'}\n            height={'540px'}\n            tomatoClockMinutes={countDownMinutes}\n            outterCanvasColor={isPaused ? appTheme.canvasThemeColor : appTheme.canvasThemeColor}\n            isPaused={isPaused}\n            passedSeconds={passedSeconds}\n          />\n        </CanvasWrapDiv>\n      </RightWrapper>\n    </FlexWrapper>\n  )\n}\n\nexport default MainPage\n","import React from 'react'\nimport { ThemeType } from '../../themes/theme'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  AppConfigStateType,\n  AppCondition,\n} from '../../store/reducers/app_configs/types'\nimport { toggleAppCondition } from '../../store/actionCreator/sagas/appconditions'\nimport { AppState } from '../../store/reducers'\nimport MainPage from './mainpage'\ninterface Props {\n  changeTheme: (string) => void\n  appTheme: ThemeType\n}\n\nexport default function MainPageWrapper(props: Props) {\n  const appConfig = useSelector<AppState, AppConfigStateType>(\n    appState => appState.appConfig,\n  )\n\n  const dispatcher = useDispatch()\n\n  const toggleAppStatus = () => dispatcher(toggleAppCondition())\n\n  let countDownMinutes\n  const appConditionNow = appConfig.appNowStatus\n  if (appConditionNow === AppCondition.ACTIVE) {\n    countDownMinutes = appConfig.taskOneTomatowaitMinutes\n  } else {\n    console.log('break...')\n    countDownMinutes = appConfig.betweenTomatoTaskBreakMinutes\n  }\n\n  return (\n    <MainPage\n      changeTheme={props.changeTheme}\n      appTheme={props.appTheme}\n      countDownMinutes={countDownMinutes}\n      toggleAppStatus={toggleAppStatus}\n      appConditionNow={appConditionNow}\n    />\n  )\n}\n","export enum TodoReducerActionTypes {\n   Add_TODO = 'Add_TODO',\n   Update_TODO = 'Update_TODO',\n} ","\nimport baseStyled, { ThemedStyledInterface } from 'styled-components'\n\nexport type ThemeType = {\n  mobileOneColumn: string,\n  inputTextColor: string,\n  countDownTextColor: string,\n  canvasThemeColor: string,\n  leftWrapperBgColor: string,\n}\n\n\nconst ActiveThemes: ThemeType = {mobileOneColumn: '550px', inputTextColor: '#FF4384', countDownTextColor: '#FF4384', canvasThemeColor: '#FF4384', leftWrapperBgColor: '#FFEDF7'}\n\nconst BreakTheme: ThemeType = {mobileOneColumn: '550px', inputTextColor: '#00A7FF', countDownTextColor: '#00A7FF', canvasThemeColor: '#00A7FF', leftWrapperBgColor: '#E5F3FF'}\n\nexport const styled = baseStyled as ThemedStyledInterface<ThemeType>;\n\nexport { ActiveThemes, BreakTheme }","import { Action } from 'redux-actions'\nimport { TodosReducerState, Todo } from './types'\nimport { TodoReducerActionTypes } from '../../actionTypes/reducers/todos'\nconst getDefaultStateOfThisTodoReducer = (): TodosReducerState => {\n  return {\n    todos: [],\n    nowTaskTodo: null,\n  }\n}\n\nexport const TodosReducer = (\n  state = getDefaultStateOfThisTodoReducer(),\n  action: Action<Todo>,\n): TodosReducerState => {\n  const { type, payload } = action\n  switch (type) {\n    case TodoReducerActionTypes.Add_TODO:\n      if (state.todos.length === 0) {\n        return { todos: [...state.todos, payload], nowTaskTodo: payload }\n      }\n      return { ...state, todos: [...state.todos, payload] }\n\n    default:\n      return state\n  }\n}\n","export enum AppConditionReducersActionTypes {\n  TOGGLE_APP_CONDITION = 'TOGGLE_APP_CONDITION',\n}","import { AppConfigStateType, AppCondition } from './types'\nimport { AppConditionReducersActionTypes } from '../../actionTypes/reducers/appconditions'\n\nconst getDefaultStateOfAppConfigReducer = (): AppConfigStateType => {\n  return {\n    taskOneTomatowaitMinutes: 25,\n    betweenTomatoTaskBreakMinutes: 5,\n    appNowStatus: AppCondition.ACTIVE,\n  }\n}\n\nexport const AppConfigReducer = (\n  state = getDefaultStateOfAppConfigReducer(),\n  action: any,\n): AppConfigStateType => {\n  const { type, payload } = action\n  switch (type) {\n    case AppConditionReducersActionTypes.TOGGLE_APP_CONDITION:\n      return {...state, appNowStatus:  state.appNowStatus === AppCondition.ACTIVE ?  AppCondition.BREAK : AppCondition.ACTIVE}\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport { TodosReducerState } from '../reducers/todos/types'\nimport { TodosReducer } from '../reducers/todos'\nimport { AppConfigStateType } from '../reducers/app_configs/types'\nimport { AppConfigReducer } from '../reducers/app_configs'\n\nexport type AppState = {\n  todo: TodosReducerState,\n  appConfig: AppConfigStateType,\n}\n\nconst rootReducer = combineReducers<AppState>({\n  appConfig: AppConfigReducer,\n  todo: TodosReducer,\n})\n\nexport default rootReducer\n","import {createAction} from 'redux-actions'\nimport { TodoReducerActionTypes } from '../../../actionTypes/reducers/todos'\nimport { TodoVO } from '../../../entities/todo'\n\nconst addNewTodo = createAction(TodoReducerActionTypes.Add_TODO, (payload: TodoVO) => payload)\n\nconst updateTodo = createAction(TodoReducerActionTypes.Update_TODO, (payload: TodoVO) => payload)\n\nexport {addNewTodo , updateTodo}","\nimport { all, put, take, call } from 'redux-saga/effects'\nimport { TodoSagaActionTypes } from '../../actionTypes/sagas/todo'\nimport { addNewTodo } from '../../actionCreator/reducers/todos'\nimport {Action} from 'redux-actions'\nimport { TodoVO } from '../../entities/todo'\n\nfunction* addNewTodoFlow() {\n  while(true){\n    const action: Action<TodoVO> = yield take(TodoSagaActionTypes.Add_TODO)\n    yield put(addNewTodo(action.payload))\n  }\n}\n\n\nexport default function* todosRootSaga() {\n  yield all(\n    [addNewTodoFlow(),]\n  )\n}","import {createAction} from 'redux-actions'\nimport { AppConditionReducersActionTypes } from '../../../actionTypes/reducers/appconditions'\n\nconst toggleAppCondition = createAction(AppConditionReducersActionTypes.TOGGLE_APP_CONDITION, () => {})\n\nexport {toggleAppCondition}","\nimport { all, put, take, call } from 'redux-saga/effects'\nimport { AppConditionSagaActionTypes } from '../../actionTypes/sagas/appconditions'\nimport { toggleAppCondition } from '../../actionCreator/reducers/appconditions'\nimport {Action} from 'redux-actions'\n\nfunction* toggleAppConditionFlow() {\n  while(true){\n    yield take(AppConditionSagaActionTypes.TOGGLE_APP_CONDITION_SAGA)\n    yield put(toggleAppCondition())\n  }\n}\n\n\nexport default function* appconditionsRootSaga() {\n  yield all(\n    [toggleAppConditionFlow(),]\n  )\n}","import todosRootSaga from './todos'\nimport appCondiionsSaga from './appconditions'\n\nexport default [\n  todosRootSaga,\n  appCondiionsSaga,\n]","import {createStore, applyMiddleware} from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport RootReducer from './reducers'\nimport logicRootSagaArray from './saga'\nconst sagaMiddleware = createSagaMiddleware()\n\nconst createStoreWithMiddleware = applyMiddleware(sagaMiddleware)(createStore)\n\nlet appStore: any;\n\nif(process.env.NODE_ENV === 'production'){\n\n  appStore = createStoreWithMiddleware(RootReducer)\n\n}else{\n  appStore = createStoreWithMiddleware(\n    RootReducer,\n    /**  force cast~  https://github.com/zalmoxisus/redux-devtools-extension/issues/134#issuecomment-379861240 */\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__())\n}\n\nlogicRootSagaArray.forEach(kindOfSomeFlowSaga => sagaMiddleware.run(kindOfSomeFlowSaga))\n\n\nexport {appStore}","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n\n  html, body {\n    width: 100vw;\n    height: 100vh;\n  }\n\n  * {\n    margin: 0px;\n    padding: 0px;\n    box-sizing: border-box;\n  }\n  /* 改用在html裡 <link rel=\"preload\"...> */\n  /* @import url('https://fonts.googleapis.com/css?family=Roboto&display=swap'); */\n`\n\nexport {GlobalStyle as StyledComponentGlobalStyle}","import React, { useState } from 'react'\nimport MainPage from './pages/mainpage'\nimport { render } from 'react-dom'\nimport { ThemeProvider } from 'styled-components'\nimport { Provider } from 'react-redux'\nimport { ActiveThemes, BreakTheme } from './themes/theme'\nimport { appStore } from './store'\nimport { StyledComponentGlobalStyle } from './themes/globalStyle'\n\nconst RootComp = () => {\n  const [activeOrBreak, setActiveOrBreak] = useState('active')\n\n  const changeTheme = (themeName: string) => {\n    setActiveOrBreak(prevThemeName =>\n      prevThemeName === 'active' ? 'break' : 'active',\n    )\n  }\n\n  return (\n    <>\n      <StyledComponentGlobalStyle />\n      <Provider store={appStore}>\n        <ThemeProvider theme={activeOrBreak === 'active' ? ActiveThemes : BreakTheme}>\n          <MainPage changeTheme={changeTheme} appTheme={ activeOrBreak === 'active' ? ActiveThemes : BreakTheme }/>\n        </ThemeProvider>\n      </Provider>\n    </>\n  )\n}\n\nconst rootElement = document.getElementById('root')\nrender(<RootComp />, rootElement)\n"],"sourceRoot":""}