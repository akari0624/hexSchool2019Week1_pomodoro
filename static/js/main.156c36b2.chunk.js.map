{"version":3,"sources":["store/reducers/app_configs/types.ts","store/actionTypes/sagas/appconditions.ts","store/actionCreator/sagas/appconditions/index.ts","pages/mainpage/styled.tsx","components/movecircle/styled.tsx","components/movecircle/Movecircle.tsx","components/countdownTimeText/styled.tsx","components/countdownTimeText/index.tsx","components/inputField/styled.tsx","store/actionTypes/sagas/todo.ts","components/inputField/index.tsx","store/entities/todo.ts","store/actionCreator/sagas/todos/index.ts","pages/mainpage/container/InputForm.tsx","pages/mainpage/container/NowTaskBar/styled.tsx","pages/mainpage/container/NowTaskBar/index.tsx","components/listItem/styled.tsx","components/listItem/index.tsx","components/listArea/index.tsx","pages/mainpage/mainpage.tsx","pages/mainpage/index.tsx","store/actionTypes/reducers/todos.ts","themes/theme.ts","store/reducers/todos/index.ts","store/actionTypes/reducers/appconditions.ts","store/reducers/app_configs/index.ts","store/reducers/index.ts","store/actionCreator/reducers/todos/index.ts","store/saga/todos/index.ts","store/actionCreator/reducers/appconditions/index.ts","store/saga/appconditions/index.ts","store/saga/index.ts","store/index.ts","themes/globalStyle.ts","index.tsx"],"names":["AppCondition","AppConditionSagaActionTypes","toggleAppCondition","createAction","TOGGLE_APP_CONDITION_SAGA","FlexWrapper","Styled","main","_templateObject","props","theme","mobileOneColumn","LeftWrapper","section","_templateObject2","leftWrapperBgColor","RightWrapper","div","_templateObject3","NowTaskBarWrapper","_templateObject4","InputFormLocatedWrapper","_templateObject5","CountdownTimeTextWrapper","_templateObject6","ListAreaWrapper","_templateObject7","PositionRelativeDivWrapper","styled_templateObject","InnerCanvas","canvas","styled_templateObject2","OutterCanvas","styled_templateObject3","MoveCircle","_ref","_ref$outterCanvasColo","outterCanvasColor","width","height","passedSeconds","isPaused","tomatoClockMinutes","_PassedSeconds","useRef","innerCanvasRef","canvasRef","wholeTomatoClockMinutesProgress","clockLoopRunFuncRef","requestDrawMoveGraduallyCircleFrame","useCallback","ctx","ctxWidth","ctxHeight","eTime","clearRect","translate","rotate","Math","PI","lineWidth","beginPath","arc","current","strokeStyle","stroke","fillStyle","lineTo","closePath","fill","setTransform","requestAnimationFrame","drawPlayOrStopButton","innerCtx","playCircleRadius","triangleBaseLength","stopSignBaseLength","drawInnerCircle","circleOffSet","useLayoutEffect","canvas1Width","offsetWidth","canvas1Height","offsetHeight","getContext","Date","now","innerCanvasWidth","innerCanvasHeight","react_default","a","createElement","ref","data-testid","TimeTetxWrapper","countdownTimeText_styled_templateObject","TimeText","countdownTimeText_styled_templateObject2","countDownTextColor","textLength","TimeTextStyledComp","children","textToRender","length","renderBigOrSmallText","formatToClockTimeString","min","sec","wholeMinutes","specialText","wholeSeconds","useMemo","_getMinAndSec","passSeconds","remainSeconds","floor","getMinAndSec","_getMinAndSec2","Object","slicedToArray","styled_TimeTextStyledComp","TodoSagaActionTypes","InputFieldOuttestWrapper","inputField_styled_templateObject","InputFieldWrapper","inputField_styled_templateObject2","InputField","input","inputField_styled_templateObject3","inputTextColor","ConfirmButtonWrapper","styled_templateObject4","ConfirmButton","styled_templateObject5","InputFieldComponent","ConfirmButtonComponent","onClick","InputFieldWithConfirmButton","styled_InputFieldComponent","styled_ConfirmButtonComponent","TodoImpl","desc","remainSec","nowTask","classCallCheck","this","createTimestamp","isComplete","tomatoCount","nowTomatoCount","addNewTodo","Add_TODO","payload","updateCurrTaskTomatoCount","Update_TODO","UPDATE_CURR_TASK_TOMATO_COUNT_PLUS_1","examineIsDescContentOK","InputForm","_useState","useState","_useState2","text","setText","dispatcher","useDispatch","todoList","useSelector","state","todo","todos","newTodoMinute","appConfig","taskOneTomatowaitMinutes","oneMinutesSec","Decimal","onInputContentChange","evt","nowText","currentTarget","value","prevText","handleOnFormSubmit","preventDefault","TodoVO","mul","onSubmit","inputField_InputFieldWithConfirmButton","placeholder","onChange","MainTaskBaWrapper","NowTaskBar_styled_templateObject","ToggleDoneCirclieWrapper","NowTaskBar_styled_templateObject2","NowTaskBar_styled_templateObject3","TodoDescWrapper","NowTaskBar_styled_templateObject4","TomatoCountWrapper","NowTaskBar_styled_templateObject5","NowTaskBar","nowTaskTodo","className","styled_LeftWrapper","ListItemWrapper","article","listItem_styled_templateObject","ListItemIsDoneChecker","listItem_styled_templateObject2","ListContentArea","listItem_styled_templateObject3","ListItemPlayBtn","listItem_styled_templateObject4","ListItemComponent","ListArea","map","listItem_ListItemComponent","key","CanvasWrapDiv","mainpage_templateObject","MainPage","countDownMinutes","appTheme","changeTheme","toggleAppStatus","appConditionNow","isHaveTodosToBeginPomodoro","specilaText","setIsPaused","_useState3","_useState4","setPassedSeconds","__DISPATCH","handleIsPause","e","useEffect","intervalID","setInterval","eq","ACTIVE","prevState","clearInterval","countdownTimeText_TimeText","toNumber","Movecircle","canvasThemeColor","MainPageWrapper","appState","appNowStatus","console","log","betweenTomatoTaskBreakMinutes","mainpage","TodoReducerActionTypes","ActiveThemes","BreakTheme","baseStyled","AppConditionReducersActionTypes","rootReducer","combineReducers","arguments","undefined","action","type","TOGGLE_APP_CONDITION","objectSpread","BREAK","Add_TODO_TO_CURRENT_TASK","Add_TODO_TO_TODO_LIST","concat","toConsumableArray","addNewTodoToCurrTask","addNewTodoToTodoList","addNewTodoFlow","updateCurrTaskTomatoCountFlow","todosRootSaga","toReducerState","regenerator_default","wrap","_context","prev","next","take","sent","select","put","stop","_marked","selectTodos","_toReducerState","_nowTaskTodo","newNowTaskTodo","_context2","Error","_marked2","_context3","all","_marked3","toggleAppConditionFlow","appconditionsRootSaga","appconditions_marked","appconditions_marked2","appStore","saga","appCondiionsSaga","sagaMiddleware","createSagaMiddleware","createStoreWithMiddleware","applyMiddleware","createStore","RootReducer","logicRootSagaArray","forEach","kindOfSomeFlowSaga","run","GlobalStyle","createGlobalStyle","globalStyle_templateObject","rootElement","document","getElementById","render","activeOrBreak","setActiveOrBreak","Fragment","es","store","styled_components_browser_esm","themeName","prevThemeName"],"mappings":"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","file":"static/js/main.156c36b2.chunk.js","sourcesContent":["import {Decimal} from 'decimal.js'\n\n\nexport type AppConfigStateType = {\n  taskOneTomatowaitMinutes: Decimal,\n  betweenTomatoTaskBreakMinutes: Decimal,\n  appNowStatus: AppCondition,\n}\n\nexport enum AppCondition {\n    ACTIVE = 'ACTIVE',\n    BREAK = 'BREAK',\n}","export enum AppConditionSagaActionTypes {\n  TOGGLE_APP_CONDITION_SAGA = 'TOGGLE_APP_CONDITION_SAGA',\n}","import {createAction} from 'redux-actions'\nimport { AppConditionSagaActionTypes } from '../../../actionTypes/sagas/appconditions'\n\nconst toggleAppCondition = createAction(AppConditionSagaActionTypes.TOGGLE_APP_CONDITION_SAGA, () => {})\n\nexport {toggleAppCondition}","import React from 'react'\nimport Styled from 'styled-components'\n\nexport const FlexWrapper = Styled.main`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  @media (max-width:${props => props.theme.mobileOneColumn}){\n    flex-direction: column;\n  }\n`\n\nexport const LeftWrapper = Styled.section`\n  width: 70%;\n  height: 100%;\n  background-color: ${props => props.theme.leftWrapperBgColor};\n  position: relative;\n  @media (max-width:${props => props.theme.mobileOneColumn}){\n    width: 100%;\n  }\n  \n`\n\nexport const RightWrapper = Styled.div`\n  width: 30%;\n  height: 100%;\n  background-color: #003164;\n\n  @media (max-width:${props => props.theme.mobileOneColumn}){\n    width: 100%;\n  }\n`\n\nexport const NowTaskBarWrapper = Styled.div`\n  margin-left: 85px;\n  margin-top: 145px;\n`\n\nexport const InputFormLocatedWrapper = Styled.div`\n  margin-left: 85px;\n  margin-top: 48px;\n`\nexport const CountdownTimeTextWrapper = Styled.div`\n  margin-top: 2px;\n  margin-left: 80px;\n  width: 454px;\n  height: 206px;\n`\n\nexport const ListAreaWrapper = Styled.div`\n  margin-top: 20px;\n  margin-left: 80px;\n  width: 454px;\n  height: 95px;\n  overflow-y: auto;\n  overflow-x: hidden;\n`","import Styled from 'styled-components'\n\nconst PositionRelativeDivWrapper = Styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n`\n\nconst InnerCanvas = Styled.canvas`\n  position: absolute;\n  z-index:300;\n`\n\nconst OutterCanvas = Styled.canvas`\n  position: absolute;\n  z-index:1;\n`\n\nexport { PositionRelativeDivWrapper, InnerCanvas, OutterCanvas }\n","import React, { useRef, useLayoutEffect, useCallback } from 'react'\nimport { PositionRelativeDivWrapper, OutterCanvas, InnerCanvas } from './styled'\n\ninterface Props {\n  width: string\n  height: string\n  innerCanvasColor?: string\n  outterCanvasColor?: string\n  passedSeconds: number\n  isPaused: boolean\n  tomatoClockMinutes: number\n}\n\nexport const canvasDataTestId = 'PomodoroClock'\n\nconst lineWidth = 4 // px\n\nconst MoveCircle = ({\n  outterCanvasColor = '#000000',\n  width,\n  height,\n  passedSeconds,\n  isPaused,\n  tomatoClockMinutes,\n}: Props) => {\n  const circleOffSet = 20\n  const _PassedSeconds = useRef<number>(0)\n  const innerCanvasRef = useRef<HTMLCanvasElement | null>(null)\n  const canvasRef = useRef<HTMLCanvasElement | null>(null)\n  const wholeTomatoClockMinutesProgress = 60 * tomatoClockMinutes\n  const clockLoopRunFuncRef = useRef<FrameRequestCallback | null>(null)\n  const requestDrawMoveGraduallyCircleFrame = useCallback(\n    (ctx: CanvasRenderingContext2D, ctxWidth: number, ctxHeight: number) => (\n      eTime: DOMHighResTimeStamp,\n    ) => {\n      const offsetToPreventPixelOverflowCanvas = 2\n      ctx.clearRect(0, 0, ctxWidth, ctxHeight)\n      ctx.translate(ctxWidth / 2, ctxHeight / 2)\n      ctx.rotate(271 * Math.PI / 180)  // 不知為何要多旋轉一度才能對齊DIV的線，找不到原因\n      ctx.lineWidth = lineWidth\n      // 畫會慢慢長大的弧形\n      ctx.beginPath()\n      ctx.arc(\n        0,\n        0,\n        (ctxWidth + ctxHeight) / 4 - offsetToPreventPixelOverflowCanvas,\n        0 * Math.PI,\n        (_PassedSeconds.current / wholeTomatoClockMinutesProgress) *\n          2 *\n          Math.PI,\n      )\n      ctx.strokeStyle = outterCanvasColor\n      ctx.stroke()\n      ctx.fillStyle = outterCanvasColor\n      ctx.lineTo(0, 0)\n      ctx.closePath()\n      ctx.fill()\n\n      // 畫外圍一圈只有框的圓\n      ctx.beginPath()\n      ctx.arc(0, 0, ((ctxWidth + ctxHeight) / 4) - offsetToPreventPixelOverflowCanvas, 0, 2 * Math.PI)\n      ctx.strokeStyle = outterCanvasColor\n      ctx.stroke()\n      ctx.closePath()\n\n      ctx.setTransform(1, 0, 0, 1, 0, 0)\n      clockLoopRunFuncRef.current &&\n        requestAnimationFrame(clockLoopRunFuncRef.current)\n    },\n    [wholeTomatoClockMinutesProgress, clockLoopRunFuncRef, outterCanvasColor],\n  )\n\n  const drawPlayOrStopButton = useCallback(\n    (\n      innerCtx: CanvasRenderingContext2D,\n      ctxWidth: number,\n      ctxHeight: number,\n      isPaused,\n    ) => {\n      const playCircleRadius = (ctxWidth + ctxHeight) / 20\n      innerCtx.translate(ctxWidth / 2, ctxHeight / 2)\n      innerCtx.lineWidth = lineWidth\n      innerCtx.beginPath()\n      innerCtx.arc(0, 0, playCircleRadius, 0, 2 * Math.PI)\n      innerCtx.strokeStyle = isPaused ? '#FFFFFF' : outterCanvasColor\n      innerCtx.stroke()\n      innerCtx.fillStyle = isPaused ? '#FFFFFF' : outterCanvasColor\n      innerCtx.fill()\n      innerCtx.closePath()\n\n      // isPaused => 畫一個三角形播放鍵, !isPaused => 畫兩條直線代表暫停\n      if (isPaused) {\n        const triangleBaseLength = playCircleRadius / 3\n\n        innerCtx.translate(5, 0)\n\n        innerCtx.beginPath()\n        innerCtx.lineTo(triangleBaseLength, 0)\n        innerCtx.lineTo(-triangleBaseLength * 1, -triangleBaseLength)\n        innerCtx.lineTo(-triangleBaseLength * 1, triangleBaseLength)\n        innerCtx.lineTo(triangleBaseLength, 0)\n        innerCtx.closePath()\n        innerCtx.strokeStyle = isPaused ? outterCanvasColor : '#FFFFFF'\n        innerCtx.stroke()\n        innerCtx.fillStyle = isPaused ? outterCanvasColor : '#FFFFFF'\n        innerCtx.fill()\n      }else{\n        const stopSignBaseLength = playCircleRadius / 3\n        innerCtx.translate(5, 0)\n        innerCtx.beginPath()\n        innerCtx.lineTo(stopSignBaseLength, 0)\n        innerCtx.lineTo(stopSignBaseLength, -stopSignBaseLength)\n        innerCtx.lineTo(0, -stopSignBaseLength)\n        innerCtx.lineTo(0, stopSignBaseLength)\n        innerCtx.lineTo(stopSignBaseLength, stopSignBaseLength)\n        innerCtx.closePath()\n        innerCtx.strokeStyle = isPaused ? outterCanvasColor : '#FFFFFF'\n        innerCtx.stroke()\n        innerCtx.fillStyle = isPaused ? outterCanvasColor : '#FFFFFF'\n        innerCtx.fill()\n\n        innerCtx.translate(-10, 0)\n        innerCtx.beginPath()\n        innerCtx.lineTo(-stopSignBaseLength, 0)\n        innerCtx.lineTo(-stopSignBaseLength, -stopSignBaseLength)\n        innerCtx.lineTo(0, -stopSignBaseLength)\n        innerCtx.lineTo(0, 0)\n        innerCtx.lineTo(0, stopSignBaseLength)\n        innerCtx.lineTo(-stopSignBaseLength, stopSignBaseLength)\n        innerCtx.lineTo(-stopSignBaseLength, 0)\n        innerCtx.lineTo(0, 0)\n        innerCtx.closePath()\n\n        innerCtx.strokeStyle = isPaused ? outterCanvasColor : '#FFFFFF'\n        innerCtx.stroke()\n        innerCtx.fillStyle = isPaused ? outterCanvasColor : '#FFFFFF'\n        innerCtx.fill()\n\n      }\n\n      innerCtx.setTransform(1, 0, 0, 1, 0, 0)\n    },\n    [isPaused, outterCanvasColor],\n  )\n\n  const drawInnerCircle = useCallback(\n    (\n      innerCtx: CanvasRenderingContext2D,\n      ctxWidth: number,\n      ctxHeight: number,\n      isPaused,\n    ) => {\n      innerCtx.translate(ctxWidth / 2, ctxHeight / 2)\n      innerCtx.lineWidth = lineWidth\n      innerCtx.beginPath()\n      innerCtx.arc(\n        0,\n        0,\n        (ctxWidth + ctxHeight) / 4 - circleOffSet * 1.5,\n        0,\n        2 * Math.PI,\n      )\n      innerCtx.strokeStyle = isPaused ? '#FFFFFF' : outterCanvasColor\n      innerCtx.stroke()\n      innerCtx.fillStyle = isPaused ? outterCanvasColor : '#FFFFFF'\n      innerCtx.fill()\n      innerCtx.closePath()\n      innerCtx.setTransform(1, 0, 0, 1, 0, 0)\n\n      drawPlayOrStopButton(innerCtx, ctxWidth, ctxHeight, isPaused)\n    },\n    [outterCanvasColor],\n  )\n\n  useLayoutEffect(() => {\n    if (canvasRef.current) {\n      const canvas1Width = canvasRef.current.offsetWidth\n      const canvas1Height = canvasRef.current.offsetHeight\n\n      canvasRef.current.width = canvas1Width\n      canvasRef.current.height = canvas1Height\n      const ctx = canvasRef.current.getContext('2d')\n      const ctxWidth = canvasRef.current.width\n      const ctxHeight = canvasRef.current.height\n      clockLoopRunFuncRef.current = requestDrawMoveGraduallyCircleFrame(\n        ctx as CanvasRenderingContext2D,\n        ctxWidth,\n        ctxHeight,\n      )\n      clockLoopRunFuncRef.current(Date.now())\n    }\n  }, [canvasRef, requestDrawMoveGraduallyCircleFrame])\n\n  // 畫中間的圓 只在denpendencies change時 才畫  不會使用requestAnimationFrame 一直畫\n  useLayoutEffect(() => {\n    if (innerCanvasRef.current) {\n      const innerCtx = innerCanvasRef.current.getContext('2d')\n      const innerCanvasWidth = innerCanvasRef.current.offsetWidth\n      const innerCanvasHeight = innerCanvasRef.current.offsetHeight\n      innerCanvasRef.current.width = innerCanvasWidth\n      innerCanvasRef.current.height = innerCanvasHeight\n\n      drawInnerCircle(\n        innerCtx as CanvasRenderingContext2D,\n        innerCanvasWidth,\n        innerCanvasHeight,\n        isPaused,\n      )\n    }\n  }, [innerCanvasRef, drawInnerCircle, isPaused])\n\n  _PassedSeconds.current = passedSeconds\n\n  return (\n    <PositionRelativeDivWrapper>\n      <OutterCanvas\n        ref={canvasRef}\n        width={width}\n        height={height}\n        data-testid={canvasDataTestId}\n      />\n      <InnerCanvas\n        ref={innerCanvasRef}\n        width={width}\n        height={height}\n        data-testid={canvasDataTestId}\n      />\n    </PositionRelativeDivWrapper>\n  )\n}\n\nexport default MoveCircle\n","import React from 'react'\nimport Styled from 'styled-components'\n\nconst TEXT_LINE_HEIGHT = '176px'\n\nconst TimeTetxWrapper = Styled.div`\n  height: ${TEXT_LINE_HEIGHT};\n  width: 100%;\n  text-align: center;\n`\n\ntype TimeTextProps = {\n  textLength: number\n}\n\nconst TimeText = Styled.div<TimeTextProps>`\n  color: ${ props => props.theme.countDownTextColor};\n  font-size: ${props => props.textLength > 5 ? '50px' : '176px'};\n  line-height: ${TEXT_LINE_HEIGHT};\n  font-family: 'Roboto', sans-serif;\n   @media (max-width:${props => props.theme.mobileOneColumn}){\n    font-size: 100px;\n  }\n`\n\ninterface Props {\n  children: () => string\n}\n\nconst renderBigOrSmallText = (textToRender: string): JSX.Element => {\n  const textLength = textToRender.length\n  return <TimeText textLength={textLength}>{textToRender}</TimeText>\n}\n\nexport const TimeTextStyledComp = ({children}: Props) => (\n  <TimeTetxWrapper>\n    {renderBigOrSmallText(children())}\n  </TimeTetxWrapper>\n)\n","import React, { useMemo, useCallback } from 'react'\nimport { TimeTextStyledComp } from './styled'\n\ninterface Props {\n  wholeMinutes: number\n  passedSeconds: number\n  specialText?: string\n}\n\nexport const formatToClockTimeString = (min: number, sec: number) => {\n  return (min < 10 ? '0' + min : min) + ':' + (sec >= 10 ? '' + sec : '0' + sec)\n}\n\nexport default function TimeText({\n  wholeMinutes,\n  passedSeconds,\n  specialText,\n}: Props) {\n  const { wholeSeconds } = useMemo(\n    () => ({ wholeSeconds: wholeMinutes * 60 }),\n    [wholeMinutes],\n  )\n\n  const getMinAndSec = useCallback(\n    (wholeSeconds: number, passSeconds: number) => {\n      const remainSeconds = wholeSeconds - passSeconds\n\n      if (remainSeconds < 0) {\n        return [0, 0]\n      }\n\n      return [Math.floor(remainSeconds / 60), remainSeconds % 60]\n    },\n    [],\n  )\n  const [min, sec] = getMinAndSec(wholeSeconds, passedSeconds)\n  return (\n    <TimeTextStyledComp>\n      {() => {\n        if (specialText && specialText !== '') {\n          return specialText\n        }\n        return formatToClockTimeString(min, sec)\n      }}\n    </TimeTextStyledComp>\n  )\n}\n","import React from 'react'\nimport Styled, { ThemedStyledInterface } from 'styled-components'\n\nconst OuttestHeight = '56px'\n\nconst InputFieldOuttestWrapper = Styled.div`\n  width: 445px;\n  height: ${OuttestHeight};\n  display: flex;\n  background-color: #FFFFFF;\n    @media (max-width:${props => props.theme.mobileOneColumn}){\n    width: 80%;\n    margin: 10px auto;\n  }\n`\n\nconst InputFieldWrapper = Styled.div`\n  width: 445px\n  height: ${OuttestHeight};\n`\n\nconst InputField = Styled.input`\n  width: 100%;\n  padding: 19px 16px 18px 16px;\n  color: ${props => props.theme.inputTextColor};\n  text-align: left;\n  font-size: 16px;\n  font-family: 'Roboto', Bold Italic;\n  line-height: 19px;\n  border: none; \n  border-width: 0; \n  box-shadow: none;\n  ::placeholder {color: ${props => props.theme.inputTextColor};}\n`\n\nconst confirmButtonLength = '24px'\n\nconst ConfirmButtonWrapper = Styled.div`\n  width: ${confirmButtonLength};\n  height: 24px;\n  margin: calc( (${OuttestHeight} - ${confirmButtonLength}) / 2) 16px;\n  text-align: center;\n  cursor: pointer;\n`\n\nconst ConfirmButton = Styled.a`\n   text-decoration: none;\n   line-height: ${confirmButtonLength};\n   font-size: 24px;\n   font-family: 'Roboto', Bold Italic;\n   color: ${props => props.theme.inputTextColor};\n`\n\nconst InputFieldComponent = (props: any) => (\n  <InputFieldWrapper>\n    <InputField {...props} />\n  </InputFieldWrapper>\n)\n\nconst ConfirmButtonComponent = (props: any) => (\n  <ConfirmButtonWrapper>\n    <ConfirmButton onClick={props.onClick}>\n      {props.children}\n    </ConfirmButton>\n  </ConfirmButtonWrapper>\n)\n\nexport { InputFieldComponent, InputFieldOuttestWrapper, ConfirmButtonComponent }\n","export enum TodoSagaActionTypes {\n  Add_TODO = 'Add_TODO_SAGA',\n  Update_TODO = 'Update_TODO_SAGA',\n  UPDATE_CURR_TASK_TOMATO_COUNT_PLUS_1 = 'UPDATE_CURR_TASK_TOMATO_COUNT_PLUS_1_SAGA',\n} ","import React from 'react'\nimport { InputFieldComponent, InputFieldOuttestWrapper, ConfirmButtonComponent } from './styled'\n\ntype EventHandler = {\n  onChange: (evt: React.ChangeEvent<HTMLInputElement>) => void\n  onClick: (evt: React.MouseEvent<HTMLElement>) => void\n}\n\nconst InputFieldWithConfirmButton: React.FunctionComponent<\n  Partial<HTMLInputElement & EventHandler>\n> = props => {\n  return (\n <InputFieldOuttestWrapper>\n   <InputFieldComponent {...props} />\n   <ConfirmButtonComponent onClick={props.onClick}>{\" \"}+{\" \"}</ConfirmButtonComponent>\n </InputFieldOuttestWrapper>\n\n  )\n}\n\nexport { InputFieldWithConfirmButton }\n","import {Todo} from '../reducers/todos/types'\nimport {Decimal} from 'decimal.js'\n\nclass TodoImpl implements Todo {\n\n  desc: string\n  remainSec: Decimal\n  createTimestamp: number\n  isComplete: boolean\n  nowTask: boolean\n  tomatoCount: number\n  nowTomatoCount: number\n\n  constructor(desc: string, remainSec: Decimal, nowTask: boolean) {\n    this.desc = desc\n    this.remainSec = remainSec\n    this.createTimestamp = Math.floor((Date.now() / 1000))\n    this.isComplete = false\n    this.nowTask = nowTask\n    this.tomatoCount = 1\n    this.nowTomatoCount = 0\n  }\n\n  \n}\n\nexport {TodoImpl as TodoVO}","import {createAction} from 'redux-actions'\nimport { TodoSagaActionTypes } from '../../../actionTypes/sagas/todo'\nimport { TodoVO } from '../../../entities/todo'\n\nconst addNewTodo = createAction(TodoSagaActionTypes.Add_TODO, (payload: TodoVO) => payload)\n\nconst updateTodo = createAction(TodoSagaActionTypes.Update_TODO, (payload: TodoVO) => payload)\n\nconst updateCurrTaskTomatoCount = createAction(TodoSagaActionTypes.UPDATE_CURR_TASK_TOMATO_COUNT_PLUS_1)\n\nexport {addNewTodo, updateTodo, updateCurrTaskTomatoCount}","import React, { useState, useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { InputFieldWithConfirmButton } from '../../../components/inputField'\nimport { TodoVO } from '../../../store/entities/todo'\nimport { addNewTodo } from '../../../store/actionCreator/sagas/todos'\nimport { AppState } from '../../../store/reducers'\nimport { Todo } from '../../../store/reducers/todos/types'\nimport {Decimal} from 'decimal.js'\n\nconst examineIsDescContentOK = (desc: string) => (desc ? true : false)\n\nexport default function InputForm() {\n  const [text, setText] = useState('')\n  const dispatcher = useDispatch()\n  const todoList = useSelector<AppState, Todo[]>(state => state.todo.todos)\n  const newTodoMinute = useSelector<AppState, Decimal>(state => state.appConfig.taskOneTomatowaitMinutes)\n\n  const oneMinutesSec = new Decimal(60) // 一分鐘60秒這樣的事情是不可能變了吧!!??\n\n  const onInputContentChange = useCallback(\n    (evt: React.ChangeEvent<HTMLInputElement>) => {\n      const nowText = evt.currentTarget.value\n      setText((prevText: string) => nowText)\n    },\n    [setText],\n  )\n\n  const handleOnFormSubmit = useCallback(\n    (evt: React.FormEvent<HTMLFormElement>) => {\n      evt.preventDefault()\n      if (!examineIsDescContentOK(text)) {\n        return\n      }\n      if(todoList.length === 0){\n        dispatcher(addNewTodo(new TodoVO(text, newTodoMinute.mul(oneMinutesSec), true)))\n      }else{\n        dispatcher(addNewTodo(new TodoVO(text, newTodoMinute.mul(oneMinutesSec), false)))\n      }\n\n      setText(prevText => '')\n    },\n    [text, newTodoMinute, setText],\n  )\n\n  return (\n    <form onSubmit={handleOnFormSubmit}>\n      <InputFieldWithConfirmButton\n        placeholder={'ADD A NEW MISSION…'}\n        value={text}\n        onChange={onInputContentChange}\n      />\n    </form>\n  )\n}\n","import React from 'react'\nimport Styled from 'styled-components'\n\nexport const MainTaskBaWrapper = Styled.div`\n  width: 445px;\n  height: 48px;\n  display: flex;\n`\n\n\n\nexport const ToggleDoneCirclieWrapper = Styled.div`\n  width: 48px;\n  height: 48px;\n\n  & > i {\n    font-size: 48px;\n    font-weight: normal;\n    color: #003164;\n  }\n`\n\nexport const LeftWrapper = Styled.div`\n  width: 397px;\n  height: 48px;\n  color: #003164\n`\n\nexport const TodoDescWrapper = Styled.div`\n  width: 348px;\n  height: 28px;\n  font-size: 24px;\n  text-align: left;\n  text-transform: uppercase;\n`\n\nexport const TomatoCountWrapper = Styled.div`\n  width: 348px;\n  height: 20px;\n`","import React from 'react'\nimport {\n  MainTaskBaWrapper,\n  ToggleDoneCirclieWrapper,\n  LeftWrapper,\n  TodoDescWrapper,\n  TomatoCountWrapper,\n} from './styled'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../../../../store/reducers'\nimport { Todo } from '../../../../store/reducers/todos/types'\n\nexport default function NowTaskBar() {\n  const nowTaskTodo = useSelector<AppState, Todo | null>(\n    state => state.todo.nowTaskTodo,\n  )\n\n  if (nowTaskTodo) {\n    return (\n      <MainTaskBaWrapper>\n        <ToggleDoneCirclieWrapper>\n          <i className=\"material-icons\">panorama_fish_eye</i>\n        </ToggleDoneCirclieWrapper>\n        <LeftWrapper>\n          <TodoDescWrapper>{nowTaskTodo.desc}</TodoDescWrapper>\n          <TomatoCountWrapper>{ nowTaskTodo.nowTomatoCount }</TomatoCountWrapper>\n        </LeftWrapper>\n      </MainTaskBaWrapper>\n    )\n  }\n  return <MainTaskBaWrapper />\n}\n","import React from 'react'\nimport Styled, { ThemedStyledInterface } from 'styled-components'\n\nconst normalScreenWidth = '445px'\nconst functionalBtnWidth = '45px'\nconst WrapperHeight = '32px'\n\nconst ListItemWrapper = Styled.article`\n  display: flex;\n  width: ${normalScreenWidth};\n  height: ${WrapperHeight};\n  border-bottom: 1px solid #DCD3E3;\n  margin-bottom: 9px;\n\n  @media (max-width:${props => props.theme.mobileOneColumn}){\n    width: 100%;\n  }\n`\n\nconst ListItemIsDoneChecker = Styled.div`\n  width: ${functionalBtnWidth};\n  line-height: ${WrapperHeight};\n  height: ${WrapperHeight};\n  text-align: center;\n\n   @media (max-width:${props => props.theme.mobileOneColumn}){\n    width: 10%;\n  }\n  & > i {\n    line-height: ${WrapperHeight};\n    height: ${WrapperHeight};\n    text-align: center;\n    cursor: pointer;\n  }\n`\n\nconst ListContentArea = Styled.div`\n  line-height: ${WrapperHeight};\n  height: ${WrapperHeight};\n  width: calc(${normalScreenWidth} - ${functionalBtnWidth} * 2);\n  text-align: left;\n\n   @media (max-width:${props => props.theme.mobileOneColumn}){\n    width: 80%;\n  }\n`\n\nconst ListItemPlayBtn = Styled.div`\n  width: ${functionalBtnWidth};\n  line-height: ${WrapperHeight};\n  height: ${WrapperHeight};\n\n   @media (max-width:${props => props.theme.mobileOneColumn}){\n    width: 10%;\n  }\n\n  & > i {\n    line-height: ${WrapperHeight};\n    height: ${WrapperHeight};\n    text-align: center;\n    cursor: pointer;\n  }\n`\n\nexport { ListItemWrapper, ListItemIsDoneChecker, ListContentArea, ListItemPlayBtn  } \n","import React from 'react'\nimport Styled from 'styled-components'\nimport {\n  ListItemWrapper,\n  ListItemIsDoneChecker,\n  ListContentArea,\n  ListItemPlayBtn,\n} from './styled'\n\nconst ListItemComponent = (props: any) => {\n  return (\n    <ListItemWrapper>\n      <ListItemIsDoneChecker>\n        <i className=\"material-icons\">panorama_fish_eye</i>\n      </ListItemIsDoneChecker>\n      <ListContentArea>{props.children}</ListContentArea>\n      <ListItemPlayBtn>\n        <i className=\"material-icons\">play_circle_outline</i>\n      </ListItemPlayBtn>\n    </ListItemWrapper>\n  )\n}\n\nexport { ListItemComponent as ListItem }\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../../store/reducers'\nimport {Todo} from '../../store/reducers/todos/types'\nimport { ListItem } from '../listItem'\n\nexport default function ListArea() {\n\n  const todos = useSelector<AppState, Todo[]>( state => state.todo.todos)\n  return (\n    <div>\n      {todos.map(todo => <ListItem key={todo.createTimestamp}>{todo.desc}</ListItem>)}\n    </div>\n  )\n}\n","import React, { useState, useCallback, useEffect } from 'react'\nimport Styled from 'styled-components'\nimport { Decimal } from 'decimal.js'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  FlexWrapper,\n  LeftWrapper,\n  RightWrapper,\n  InputFormLocatedWrapper,\n  CountdownTimeTextWrapper,\n  ListAreaWrapper,\n  NowTaskBarWrapper,\n} from './styled'\nimport MoveCircle from '../../components/movecircle'\nimport CountdownTimeText from '../../components/countdownTimeText'\nimport InputForm from './container/InputForm'\nimport NowTaskBar from './container/NowTaskBar'\nimport ListArea from '../../components/listArea'\nimport { AppCondition } from '../../store/reducers/app_configs/types'\nimport { ThemeType } from '../../themes/theme'\nimport { AppState } from '../../store/reducers'\nimport { Todo } from '../../store/reducers/todos/types'\nimport { updateCurrTaskTomatoCount } from '../../store/actionCreator/sagas/todos'\n\nconst CanvasWrapDiv = Styled.div`\n  position: absolute;\n  width: 550px;\n  height:550px;\n  z-index: 3000;\n  margin-left: -275px;\n  margin-top: calc(50vh - 540px / 2);\n\n  @media (max-width:${props => props.theme.mobileOneColumn}){\n     margin-left: 0px;\n     margin-top: calc(50vh - 540px);\n  }\n  \n`\n\ninterface Props {\n  changeTheme: (string) => void\n  appTheme: ThemeType\n  countDownMinutes: Decimal\n  toggleAppStatus: () => void\n  appConditionNow: AppCondition\n}\n\nfunction MainPage(props: Props) {\n  const { countDownMinutes, appTheme, changeTheme, toggleAppStatus, appConditionNow } = props\n\n  const nowTaskTodo = useSelector<AppState, Todo | null>( state => state.todo.nowTaskTodo)\n  const isHaveTodosToBeginPomodoro = nowTaskTodo ? true : false\n  const specilaText = isHaveTodosToBeginPomodoro ? '' : 'add Some Todos'\n  const [isPaused, setIsPaused] = useState(true)\n  const [passedSeconds, setPassedSeconds] = useState(0)\n  const __DISPATCH = useDispatch()\n\n  const handleIsPause = useCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if(!isHaveTodosToBeginPomodoro){\n      return\n    }\n    setIsPaused((isPaused: boolean) => !isPaused)\n  }, [isHaveTodosToBeginPomodoro])\n\n  useEffect(() => {\n    const doSetPassedSeconds = () => {\n      if (!isPaused) {\n        setPassedSeconds((passedSeconds: number) => passedSeconds + 1)\n      }\n\n      if(Decimal.mul(countDownMinutes, new Decimal(60)).eq(passedSeconds) ){\n        if(appConditionNow === AppCondition.ACTIVE){\n          changeTheme('break')\n          __DISPATCH(updateCurrTaskTomatoCount())\n        }else{\n          changeTheme('active')\n        } \n        toggleAppStatus()\n        setPassedSeconds(prevState => 0)\n        \n      }\n    }\n\n    const intervalID = setInterval(doSetPassedSeconds, 1000)\n\n    return () => {\n      clearInterval(intervalID)\n    }\n  }, [isPaused, countDownMinutes, passedSeconds, props, changeTheme])\n\n  return (\n    <FlexWrapper>\n      <LeftWrapper>\n        <InputFormLocatedWrapper>\n          <InputForm />\n        </InputFormLocatedWrapper>\n        <NowTaskBarWrapper>\n          <NowTaskBar />\n        </NowTaskBarWrapper>\n        <CountdownTimeTextWrapper>\n          <CountdownTimeText\n            wholeMinutes={countDownMinutes.toNumber()}\n            passedSeconds={passedSeconds}\n            specialText={specilaText}\n          />\n        </CountdownTimeTextWrapper>\n        <ListAreaWrapper>\n          <ListArea />\n        </ListAreaWrapper>\n      </LeftWrapper>\n      <RightWrapper>\n        <CanvasWrapDiv onClick={handleIsPause}>\n          <MoveCircle\n            width={'540px'}\n            height={'540px'}\n            tomatoClockMinutes={countDownMinutes.toNumber()}\n            outterCanvasColor={isPaused ? appTheme.canvasThemeColor : appTheme.canvasThemeColor}\n            isPaused={isPaused}\n            passedSeconds={passedSeconds}\n          />\n        </CanvasWrapDiv>\n      </RightWrapper>\n    </FlexWrapper>\n  )\n}\n\nexport default MainPage\n","import React from 'react'\nimport { ThemeType } from '../../themes/theme'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Decimal } from 'decimal.js'\nimport {\n  AppConfigStateType,\n  AppCondition,\n} from '../../store/reducers/app_configs/types'\nimport { toggleAppCondition } from '../../store/actionCreator/sagas/appconditions'\nimport { AppState } from '../../store/reducers'\nimport MainPage from './mainpage'\ninterface Props {\n  changeTheme: (string) => void\n  appTheme: ThemeType\n}\n\nexport default function MainPageWrapper(props: Props) {\n  const appConfig = useSelector<AppState, AppConfigStateType>(\n    appState => appState.appConfig,\n  )\n\n  const dispatcher = useDispatch()\n\n  const toggleAppStatus = () => dispatcher(toggleAppCondition())\n\n  let countDownMinutes: Decimal\n  const appConditionNow = appConfig.appNowStatus\n  if (appConditionNow === AppCondition.ACTIVE) {\n    countDownMinutes = appConfig.taskOneTomatowaitMinutes\n  } else {\n    console.log('break...')\n    countDownMinutes = appConfig.betweenTomatoTaskBreakMinutes\n  }\n\n  return (\n    <MainPage\n      changeTheme={props.changeTheme}\n      appTheme={props.appTheme}\n      countDownMinutes={countDownMinutes}\n      toggleAppStatus={toggleAppStatus}\n      appConditionNow={appConditionNow}\n    />\n  )\n}\n","export enum TodoReducerActionTypes {\n   Add_TODO_TO_CURRENT_TASK = 'Add_TODO_TO_CURRENT_TASK',\n   Add_TODO_TO_TODO_LIST = 'Add_TODO_TO_TODO_LIST',\n   Update_TODO = 'Update_TODO',\n   UPDATE_CURR_TASK_TOMATO_COUNT_PLUS_1 = 'UPDATE_CURR_TASK_TOMATO_COUNT_PLUS_1',\n} ","\nimport baseStyled, { ThemedStyledInterface } from 'styled-components'\n\nexport type ThemeType = {\n  mobileOneColumn: string,\n  inputTextColor: string,\n  countDownTextColor: string,\n  canvasThemeColor: string,\n  leftWrapperBgColor: string,\n}\n\n\nconst ActiveThemes: ThemeType = {mobileOneColumn: '550px', inputTextColor: '#FF4384', countDownTextColor: '#FF4384', canvasThemeColor: '#FF4384', leftWrapperBgColor: '#FFEDF7'}\n\nconst BreakTheme: ThemeType = {mobileOneColumn: '550px', inputTextColor: '#00A7FF', countDownTextColor: '#00A7FF', canvasThemeColor: '#00A7FF', leftWrapperBgColor: '#E5F3FF'}\n\nexport const styled = baseStyled as ThemedStyledInterface<ThemeType>;\n\nexport { ActiveThemes, BreakTheme }","import { Action } from 'redux-actions'\nimport { TodosReducerState, Todo } from './types'\nimport { TodoReducerActionTypes } from '../../actionTypes/reducers/todos'\nconst getDefaultStateOfThisTodoReducer = (): TodosReducerState => {\n  return {\n    todos: [],\n    nowTaskTodo: null,\n  }\n}\n\nexport const TodosReducer = (\n  state = getDefaultStateOfThisTodoReducer(),\n  action: Action<Todo>,\n): TodosReducerState => {\n  const { type, payload } = action\n  switch (type) {\n    case TodoReducerActionTypes.Add_TODO_TO_CURRENT_TASK:\n      return { ...state, nowTaskTodo: payload }\n    case TodoReducerActionTypes.Add_TODO_TO_TODO_LIST:\n      return { ...state, todos: [...state.todos, payload] }\n    case TodoReducerActionTypes.UPDATE_CURR_TASK_TOMATO_COUNT_PLUS_1:\n      return {...state, nowTaskTodo: payload}\n\n    default:\n      return state\n  }\n}\n","export enum AppConditionReducersActionTypes {\n  TOGGLE_APP_CONDITION = 'TOGGLE_APP_CONDITION',\n}","import { AppConfigStateType, AppCondition } from './types'\nimport { AppConditionReducersActionTypes } from '../../actionTypes/reducers/appconditions'\nimport {Decimal} from 'decimal.js'\n\nconst getDefaultStateOfAppConfigReducer = (): AppConfigStateType => {\n  return {\n    taskOneTomatowaitMinutes: new Decimal(25),\n    betweenTomatoTaskBreakMinutes: new Decimal(5),\n    appNowStatus: AppCondition.ACTIVE,\n  }\n}\n\nexport const AppConfigReducer = (\n  state = getDefaultStateOfAppConfigReducer(),\n  action: any,\n): AppConfigStateType => {\n  const { type, payload } = action\n  switch (type) {\n    case AppConditionReducersActionTypes.TOGGLE_APP_CONDITION:\n      return {...state, appNowStatus:  state.appNowStatus === AppCondition.ACTIVE ?  AppCondition.BREAK : AppCondition.ACTIVE}\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport { TodosReducerState } from '../reducers/todos/types'\nimport { TodosReducer } from '../reducers/todos'\nimport { AppConfigStateType } from '../reducers/app_configs/types'\nimport { AppConfigReducer } from '../reducers/app_configs'\n\nexport type AppState = {\n  todo: TodosReducerState,\n  appConfig: AppConfigStateType,\n}\n\nconst rootReducer = combineReducers<AppState>({\n  appConfig: AppConfigReducer,\n  todo: TodosReducer,\n})\n\nexport default rootReducer\n","import {createAction} from 'redux-actions'\nimport { TodoReducerActionTypes } from '../../../actionTypes/reducers/todos'\nimport { TodoVO } from '../../../entities/todo'\n\nconst addNewTodoToCurrTask = createAction(TodoReducerActionTypes.Add_TODO_TO_CURRENT_TASK, (payload: TodoVO) => payload)\n\nconst addNewTodoToTodoList = createAction(TodoReducerActionTypes.Add_TODO_TO_TODO_LIST, (payload: TodoVO) => payload)\n\nconst updateTodo = createAction(TodoReducerActionTypes.Update_TODO, (payload: TodoVO) => payload)\n\nconst updateCurrTaskTomatoCount = createAction(TodoReducerActionTypes.UPDATE_CURR_TASK_TOMATO_COUNT_PLUS_1, (payload: TodoVO) => payload)\n\n\nexport {addNewTodoToCurrTask, addNewTodoToTodoList, updateTodo, updateCurrTaskTomatoCount}","import { all, put, take, select, call } from 'redux-saga/effects'\nimport { TodoSagaActionTypes } from '../../actionTypes/sagas/todo'\nimport {\n  addNewTodoToCurrTask,\n  addNewTodoToTodoList,\n  updateCurrTaskTomatoCount,\n} from '../../actionCreator/reducers/todos'\nimport { Action } from 'redux-actions'\nimport { TodoVO } from '../../entities/todo'\nimport { AppState } from '../../reducers'\nimport { TodosReducerState } from '../../reducers/todos/types'\n\nfunction* addNewTodoFlow() {\n  while (true) {\n    const action: Action<TodoVO> = yield take(TodoSagaActionTypes.Add_TODO)\n    const toReducerState: TodosReducerState = yield select((state: AppState) => state.todo)\n    const { todos, nowTaskTodo } = toReducerState\n    if (nowTaskTodo) {\n      yield put(addNewTodoToTodoList(action.payload))\n    } else {\n      // todos.length === 0 && !nowTaskTodo\n      yield put(addNewTodoToCurrTask(action.payload))\n    }\n  }\n}\n\nfunction* updateCurrTaskTomatoCountFlow() {\n  while (true) {\n    yield take(TodoSagaActionTypes.UPDATE_CURR_TASK_TOMATO_COUNT_PLUS_1)\n    const selectTodos = (state: AppState) => state.todo\n    const toReducerState: TodosReducerState = yield select(selectTodos)\n    const { nowTaskTodo } = toReducerState\n    console.log(nowTaskTodo)\n    if (nowTaskTodo) {\n      const newNowTaskTodo = {...nowTaskTodo, nowTomatoCount: nowTaskTodo.nowTomatoCount + 1}\n      yield put(updateCurrTaskTomatoCount(newNowTaskTodo))\n    } else {\n      throw new Error('there is no curr task to update tomato count !!')\n    }\n  }\n}\n\nexport default function* todosRootSaga() {\n  yield all([\n    addNewTodoFlow(),\n    updateCurrTaskTomatoCountFlow(),\n  ])\n}\n","import {createAction} from 'redux-actions'\nimport { AppConditionReducersActionTypes } from '../../../actionTypes/reducers/appconditions'\n\nconst toggleAppCondition = createAction(AppConditionReducersActionTypes.TOGGLE_APP_CONDITION, () => {})\n\nexport {toggleAppCondition}","\nimport { all, put, take, call } from 'redux-saga/effects'\nimport { AppConditionSagaActionTypes } from '../../actionTypes/sagas/appconditions'\nimport { toggleAppCondition } from '../../actionCreator/reducers/appconditions'\nimport {Action} from 'redux-actions'\n\nfunction* toggleAppConditionFlow() {\n  while(true){\n    yield take(AppConditionSagaActionTypes.TOGGLE_APP_CONDITION_SAGA)\n    yield put(toggleAppCondition())\n  }\n}\n\n\nexport default function* appconditionsRootSaga() {\n  yield all(\n    [toggleAppConditionFlow(),]\n  )\n}","import todosRootSaga from './todos'\nimport appCondiionsSaga from './appconditions'\n\nexport default [\n  todosRootSaga,\n  appCondiionsSaga,\n]","import {createStore, applyMiddleware} from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport RootReducer from './reducers'\nimport logicRootSagaArray from './saga'\nconst sagaMiddleware = createSagaMiddleware()\n\nconst createStoreWithMiddleware = applyMiddleware(sagaMiddleware)(createStore)\n\nlet appStore: any;\n\nif(process.env.NODE_ENV === 'production'){\n\n  appStore = createStoreWithMiddleware(RootReducer)\n\n}else{\n  appStore = createStoreWithMiddleware(\n    RootReducer,\n    /**  force cast~  https://github.com/zalmoxisus/redux-devtools-extension/issues/134#issuecomment-379861240 */\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__())\n}\n\nlogicRootSagaArray.forEach(kindOfSomeFlowSaga => sagaMiddleware.run(kindOfSomeFlowSaga))\n\n\nexport {appStore}","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n\n  html, body {\n    width: 100vw;\n    height: 100vh;\n  }\n\n  * {\n    margin: 0px;\n    padding: 0px;\n    box-sizing: border-box;\n  }\n  /* 改用在html裡 <link rel=\"preload\"...> */\n  /* @import url('https://fonts.googleapis.com/css?family=Roboto&display=swap'); */\n`\n\nexport {GlobalStyle as StyledComponentGlobalStyle}","import React, { useState } from 'react'\nimport MainPage from './pages/mainpage'\nimport { render } from 'react-dom'\nimport { ThemeProvider } from 'styled-components'\nimport { Provider } from 'react-redux'\nimport { ActiveThemes, BreakTheme } from './themes/theme'\nimport { appStore } from './store'\nimport { StyledComponentGlobalStyle } from './themes/globalStyle'\n\nconst RootComp = () => {\n  const [activeOrBreak, setActiveOrBreak] = useState('active')\n\n  const changeTheme = (themeName: string) => {\n    setActiveOrBreak(prevThemeName =>\n      prevThemeName === 'active' ? 'break' : 'active',\n    )\n  }\n\n  return (\n    <>\n      <StyledComponentGlobalStyle />\n      <Provider store={appStore}>\n        <ThemeProvider theme={activeOrBreak === 'active' ? ActiveThemes : BreakTheme}>\n          <MainPage changeTheme={changeTheme} appTheme={ activeOrBreak === 'active' ? ActiveThemes : BreakTheme }/>\n        </ThemeProvider>\n      </Provider>\n    </>\n  )\n}\n\nconst rootElement = document.getElementById('root')\nrender(<RootComp />, rootElement)\n"],"sourceRoot":""}